#geom_histogram(color_length, aes(x=col_len))
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
group_by(col_len) %>%
arrange(col_len) %>%
mutate(count=n())
color_length
#geom_histogram(color_length, aes(x=col_len))
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
group_by(col_len) %>%
arrange(col_len) %>%
color_length
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
group_by(col_len) %>%
arrange(col_len) %>%
color_length
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
group_by(col_len) %>%
arrange(col_len)
color_length
#geom_histogram(color_length, aes(x=col_len))
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
group_by(col_len) %>%
arrange(col_len) %>%
summarize(count=count(col_len))
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
group_by(col_len) %>%
arrange(col_len)
color_length
#geom_histogram(color_length, aes(x=col_len))
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len)
color_length
#geom_histogram(color_length, aes(x=col_len))
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
color_length
#geom_histogram(color_length, aes(x=col_len))
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len)
color_length
#geom_histogram(color_length, aes(x=col_len))
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
color_length
#geom_histogram(color_length, aes(x=col_len))
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
df_colors = tibble(
index = seq_along(colors()), #length of seq based on length of argument
colors = colors()) #colors() are built-in color names
df_colors
df1 <- df_colors %>%
mutate(length = str_length(colors))
head(df1)
df1long <- df1 %>%
slice_max(n=1, order_by=length)
df1long
df1short <- df1 %>%
slice_min(n=1, order_by=length)
df1short
ggplot(df1, aes(x=length)) +
geom_bar(fill=df1long$colors,color="black") +
xlab("Word Length") +
scale_x_continuous(labels=3:20,breaks=3:20) +
ggtitle("R Colors Name Length Distribution")
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=3)
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=1)
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=1, boundary=3)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=1, boundary=3)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=0, boundary=3)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=1)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=7)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=0.1)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=0.5)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=0.75)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=0.5)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=0.6)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
color_length <- df_colors %>%
mutate(col_len = str_length(colors)) %>%
arrange(col_len) %>%
group_by(col_len)
ggplot(color_length, aes(x=col_len)) +
geom_histogram(binwidth=0.5)
ggplot(color_length, aes(x=col_len)) +
geom_bar()
colors()
colors() %>%
str_detect("red")
df_colors
df_colors %>%
filter(str_detect("red"))
ggplot(df1, aes(x=length)) +
geom_bar(fill=df1long$colors,color="black") +
xlab("Word Length") +
scale_x_continuous(labels=3:20,breaks=3:20) +
ggtitle("R Colors Name Length Distribution")
df_colors %>%
filter(str_length(colors) == 8) %>%
summarize(n = n(),
first = min(colors),
last = max(colors))
#Look at all colors with string length 8 in order by color name
df_colors %>%
filter(str_length(colors) == 8) %>%
arrange(colors)
df2 <- df_colors %>%
mutate(first = str_sub(colors,1,1),
last = str_sub(colors,-1,-1)) %>%
filter(first == last)
df2
df2 %>%
summarize(n=n(), first = min(colors), last = max(colors))
df2b <- df_colors %>%
filter(str_detect(colors, "(^[a-zA-Z]).*\\1$"))
# ^ = start / $ = end / [a-zA-Z] = match any letter a to z / () = group
# \\1 = call this group by... # . = any character except new line / * = any character can appear 0 or more times
df2b
df_colors
df3 <- df_colors %>%
filter(str_detect(colors, "^[aeiou].*[aeiouy]$"))
df3
df3 <- df3 %>%
mutate(new_colors = str_c(str_to_upper(str_sub(colors,1,1)),
str_sub(colors,2,-3), #start and end points are inclusive
"XX"))
df3
df6 <-df_colors %>%
filter(str_detect(colors, "red|blue|green"))
df6
df_colors %>%
filter(str_detect(colors, "red"))
df2 <- df_colors %>%
mutate(first = str_sub(colors,1,1),
last = str_sub(colors,-1,-1)) %>%
filter(first == last)
df2
red_colors <- df_colors %>%
filter(str_detect(colors, "red"))
dim(red_colors)
red_colors
df2 <- df_colors %>%
mutate(first = str_sub(colors,1,1),
last = str_sub(colors,-1,-1)) %>%
filter(first == last)
df2
df2 %>%
summarize(n=n(), first = min(colors), last = max(colors))
red_colors <- df_colors %>%
filter(str_detect(colors, "red"))
red_colors %>%
summarize(n=n(), first=min(colors), last=max(colors))
df_words
df_words %>%
mutate(first=str_sub(words,1,1), last=str_sub(words,-1,-1))
first_last<- df_words %>%
mutate(first=str_lower(str_sub(words,1,1)), last=str_lower(str_sub(words,-1,-1)))
first_last<- df_words %>%
mutate(first= str_to_lower(str_sub(words,1,1)), last=str_to_lower(str_sub(words,-1,-1)))
first_last
first_last<- df_words %>%
mutate( first= str_to_lower(str_sub(words,1,1)), last= str_to_lower(str_sub(words,-1,-1)) ) %>%
group_by(first, last)
first_last<- df_words %>%
mutate( first= str_to_lower(str_sub(words,1,1)), last= str_to_lower(str_sub(words,-1,-1)) ) %>%
group_by(first, last)
first_last
first_last<- df_words %>%
mutate( first= str_to_lower(str_sub(words,1,1)) ) %>%
group_by(first)
ggplot(first_last, aes(x=first) ) +
geom_bar()
start_first <- df_words %>%
mutate( first= str_to_lower(str_sub(words,1,1)) ) %>%
group_by(first)
ggplot(start_first, aes(x=first) ) +
geom_bar()
start_first <- df_words %>%
mutate( first= str_to_lower(str_sub(words,1,1)) ) %>%
group_by(first)
end_last <- df_words %>%
mutate( last= str_to_lower(str_sub(words,-1,-1)) ) %>%
group_by(last)
ggplot(start_first, aes(x=first) ) +
geom_bar()
ggplot(end_last, aes(x=last)) +
geom_bar()
df_words
df_words %>%
filter(str_sub(words,1,1) == 's')
popular_first<- df_words %>%
filter(str_to_lower(str_sub(words,1,1)) == 's') %>%
popular_first
popular_first<- df_words %>%
filter(str_to_lower(str_sub(words,1,1)) == 's')
popular_first
popular_first<- df_words %>%
filter(str_to_lower(str_sub(words,1,1)) == 's') %>%
summarize(n=n(), first=min(words), last=max(words))
popular_first
df_words %>%
filter( str_detect('^[:upper:']) )
df_words %>%
filter( str_detect(`^[:upper:]`)) )
df_words %>%
filter(str_detect('^[:upper:]'))
df_words %>%
filter(str_detect(words, '^[:upper:]'))
upper_words <- df_words %>%
filter(str_detect(words, '^[:upper:]'))
upper_words
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(gutenbergr)
library(tidytext)
# Look at the structure of the gutenberg meta data
str(gutenberg_metadata)
gutenberg_metadata %>%
select(title)
gutenberg_metadata %>%
filter(str_detect(title, "huck")) # 'huck' is case-sensitive
gutenberg_metadata %>%
select(gutenberg_id, title) %>%
filter(str_detect(title, regex("huck", ignore_case=TRUE)))
gutenberg_metadata %>%
select(gutenberg_id, title) %>%
filter(str_detect(title, "(?i)huck" )) # (?i) makes it match case insensitive
#There it is!  Let's grab the work using the gutenberg_id = 76
huck <- gutenberg_download(76)
# Louisa May Alcott authored many texts!
gutenberg_metadata %>%
select(gutenberg_id, title, author) %>%
filter(str_detect(author, "(?i)alcott"))
# We will look at little women
gutenberg_metadata %>%
filter(str_detect(title, "^(?i)little women$"))
# gutenberg_id = 514...other option does not seem to have a text available
lw_orig <- gutenberg_download(514)
lw_orig # not very clean
lw_orig %>%
slice(1:69) #first 69 rows are header material (like chapter names)
## Get chapter names
chapter_names <- lw_orig %>%
select(text) %>%
slice(c(16:38,43:60,61:66)) %>%
mutate(text = str_trim(text)) %>%
pull()
chapter_names
## Chapter 1 begins in row 70 and then the chapter content is spread across multiple rows.
lw_orig %>%
slice(70:80)
## Collapse the text into one string
lw <- lw_orig %>%
slice(-c(1:69)) %>% # remove header content
select(text) %>%
filter(!str_detect(text,"^$")) %>% #remove the empty strings
summarize(full = str_c(text, collapse = " "))
length(lw$full)
str_length(lw$full)
## Split the text into a string for each chapter
little_women <- str_split(lw, "CHAPTER ")[[1]][-1]
## 47 chapters
length(little_women)
## Make the data frame requested in the question
chapters <- tibble(number=seq_along(chapter_names), title= chapter_names, text = little_women)
df_colors
#color_string <-
df_colors %>%
filter(str_detect(colors, '|'))
#color_string
#color_string <-
df_colors %>%
filter(str_detect(colors, '|')) %>%
arrange(colors)
#color_string
#color_string <-
df_colors %>%
filter(str_detect(colors, '|')) %>%
arrange(colors) %>%
summarize(n=n())
#color_string
color_string <- df_colors %>%
filter(str_detect(colors, '|')) %>%
arrange(colors) %>%
summarize(n=n())
color_string
color_string <- df_colors %>%
filter(str_detect(colors, '|')) %>%
arrange(colors)
color_string %>%
summarize(n=n())
color_string
color_string <- df_colors %>%
filter(str_detect(colors, '|')) %>%
arrange(colors)
color_string %>%
summarize(n=n())
color_string[:30]
color_string <- df_colors %>%
filter(str_detect(colors, '|')) %>%
arrange(colors)
color_string %>%
summarize(n=n())
head(color_string)
color_string <- df_colors %>%
filter(str_detect(colors, '|')) %>%
arrange(colors)
color_string %>%
summarize(n=n())
head(color_string, 30)
list(color_string)
list(color_string$colors)
color_words <- list(color_string$colors)
color_words <- list(color_string$colors)
df_words %>%
mutate( match = str_match(words, color_words))
color_words <- list(color_string$colors)
df_words %>%
mutate( match = str_match(words, color_string))
df_words
str_match('abc','abc')
str_match('abc','ab')
str_match('abc','a')
str_match('abc','ooo')
color_words <- list(color_string$colors)
df_words %>%
mutate( match = str_match(words, color_words) )
color_words <- list(color_string$colors)
df_words %>%
mutate( match = str_match(list(words), color_words) )
color_words <- list(color_string$colors)
type(color_words)
color_words <- list(color_string$colors)
str(color_words)
df_words %>%
mutate( match = str_match(list(words), color_words) )
color_words <- list(color_string$colors)
str(color_words)
str(df_words$words)
df_words %>%
mutate( match = str_match(list(words), color_words) )
color_words <- list(color_string$colors)
str(color_words)
df_words$words
df_words %>%
mutate( match = str_match(list(words), color_words) )
color_string$colors
df_words$words
df_words %>%
mutate( match = str_match(list(words), color_words) )
color_string$colors
df_words$words
df_words %>%
mutate( match = str_match(df_words$words, color_string$colors) )
df_words %>%
mutate( match = str_match(df_words$words, color_string$colors) ) %>%
drop_na()
df_words %>%
mutate( match = str_match(df_words$words, color_string$colors) )
df_words %>%
mutate( match = str_match(words, color_string$colors) )
str_match(df_words$words, color_string$colors)
#df_words %>%
#mutate( match = str_match(words, color_string$colors) )
str_match(df_words$words, color_string$colors) %>% drop_na()
str_match(df_words$words, color_string$colors)
#df_words %>%
#mutate( match = str_match(words, color_string$colors) )
df_words$words
color_string
color_string$colors
str_match(df_words$words, color_string$colors)
#str_match(df_words$words, color_string$colors)
str_match('red', 'red')
#df_words %>%
#mutate( match = str_match(words, color_string$colors) )
#str_match(df_words$words, color_string$colors)
str_match(c('a','b', 'red'), c('red', 'p', ';')
#df_words %>%
#mutate( match = str_match(words, color_string$colors) )
#str_match(df_words$words, color_string$colors)
str_match(c('a','b', 'red'), c('red', 'p', ';'))
#df_words %>%
#mutate( match = str_match(words, color_string$colors) )
#str_match(df_words$words, color_string$colors)
c('a','b', 'red')
str_match(c('a','b', 'red'), c('red', 'p', ';'))
#df_words %>%
#mutate( match = str_match(words, color_string$colors) )
#str_match(df_words$words, color_string$colors)
str(c('a','b', 'red'))
str_match(c('a','b', 'red'), c('red', 'p', ';'))
#df_words %>%
#mutate( match = str_match(words, color_string$colors) )
#str_match(df_words$words, color_string$colors)
str(c('a','b', 'red'))
str_match(list(c('a','b', 'red')), list(c('red', 'p', ';'))
#df_words %>%
#mutate( match = str_match(words, color_string$colors) )
#str_match(df_words$words, color_string$colors)
str(c('a','b', 'red'))
str_match(list(c('a','b', 'red')), list(c('red', 'p', ';')))
upper_words <- df_words %>%
filter(str_detect(words, '^[:upper:]'))
upper_words
upper_words$words <-
str_to_lower(upper_words$words)
upper_words <- df_words %>%
filter(str_detect(words, '^[:upper:]'))
upper_words$words <-
str_to_lower(upper_words$words)
upper_words
df_words %>%
mutate( match = str_match(words, color_string$colors) ) %>%
drop_na()
