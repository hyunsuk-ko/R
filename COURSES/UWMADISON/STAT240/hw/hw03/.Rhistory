## Add a period for 30-year periods from 1870 through 2019
breaks = seq(1869,2019,30)
labels = str_c((breaks+1)[-6],breaks[-1],sep="-") #?str_c: Joins two or more vectors element-wise into a single character vector, optionally inserting sep between input vectors.
mw_year = mw %>%
mutate(tavg = (tmin+tmax)/2) %>%
mutate(year = year(date)) %>%
filter(year < 2020 & year > 1869) %>%
group_by(year) %>%
summarize(n = n(),
tmin = mean(tmin),
tavg = mean(tavg),
tmax = mean(tmax),
prcp = sum(prcp)) %>%
mutate(period = cut(year,
breaks = breaks,
labels = labels))
## Summarize by month and period
mw_month = mw %>%
mutate(tavg = (tmin+tmax)/2) %>%
mutate(month = month(date, label=TRUE)) %>%
mutate(year = year(date)) %>%
filter(year < 2020 & year > 1869) %>%
mutate(period = cut(year,
breaks = breaks,
labels = labels)) %>%
group_by(period,month) %>%
summarize(n=n(),
tmin = mean(tmin),
tmax = mean(tmax),
tavg = mean(tavg),
prcp = sum(prcp))
View(planets)
planet7 <- planets %>%
group_by(method) %>%
summarize(observation_number = sum(number))
planet7 <- planets %>%
group_by(method) %>%
#summarize(observation_number = sum(number))
planet7 <- planets %>%
group_by(method) #%>%
#summarize(observation_number = sum(number))
planet7 <- planets %>%
group_by(method) #%>%
#summarize(observation_number = sum(number))
planet7
planets
planet7 <- planets %>%
group_by(method) #%>%
#summarize(observation_number = sum(number))
planet7
planet7 <- planets %>%
group_by(method, name) #%>%
#summarize(observation_number = sum(number))
planet7
planet7 <- planets %>%
group_by(method, name) #%>%
#summarize(observation_number = sum(number))
ggplot(planet7, aes(x=method, y= number)) +
geom_bar()
planet7 <- planets %>%
group_by(method, name) #%>%
#summarize(observation_number = sum(number))
#ggplot(planet7, aes(x=method, y= number)) +
#geom_bar()
planet7
planet7 <- planets %>%
group_by(method, name) #%>%
#summarize(observation_number = sum(number))
planet7
#ggplot(planet7, aes(x=method, y= number)) +
#geom_bar()
planet7 = planets %>%
group_by(method, name) #%>%
#summarize(observation_number = sum(number))
planet7
#ggplot(planet7, aes(x=method, y= number)) +
#geom_bar()
planet7 = planets %>%
group_by(method) #%>%
#summarize(observation_number = sum(number))
planet7
#ggplot(planet7, aes(x=method, y= number)) +
#geom_bar()
planets
planets %>%
group_by(method) #%>%
#summarize(observation_number = sum(number))
#ggplot(planet7, aes(x=method, y= number)) +
#geom_bar()
## Read in the csv file
## There is one row per exoplanet after applying `filter(default_flag != 0)`
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag != 0) %>%
select(pl_name, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(name=pl_name, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(mass <10000) %>%
drop_na()
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag != 0) %>%
select(pl_name, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(name=pl_name, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(mass <10000) %>%
drop_na()
knitr::opts_chunk$set(echo = FALSE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
## Read the US deaths data
## Read the US deaths data
us_deaths = read_csv("../../data/us-deaths.csv") %>%
select(-baseline) %>%
mutate(week_end_date = mdy(week_end_date))
## Read the S&P 500 data
sp500 = read_csv("../../data/sp500.csv") %>%
select(-`Adj Close`,-Volume)
ggplot(us_deaths, aes(x = week_end_date, yend=0)) +
geom_line(aes(y = (actual_deaths / 10000)),color = viridis3[1]) +
geom_line(aes(y = (maximum_expected_deaths/10000)), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y") +
xlab("Quarters") +
ylab("Actual Deaths & Expected Deaths")
us_deaths %>%
filter(week_end_date > ymd("2020-01-01") & week_end_date < ymd("2020-08-01")) %>%
ggplot(aes(x = week_end_date)) +
geom_col(aes(y = actual_deaths), color = viridis3[1], fill = viridis3[1]) +
geom_line(aes(y = maximum_expected_deaths), color = viridis3[3]) +
scale_x_date(date_labels = "%b-%Y", date_break = "1 month") +
xlab("") +
ylab("Actual Deaths") +
ggtitle("US Deaths in 2020 by Week") +
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1))
## Read in the csv file
## There is one row per exoplanet after applying `filter(default_flag != 0)`
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag != 0) %>%
select(pl_name, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(name=pl_name, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(mass <10000) %>%
drop_na()
planets %>%
group_by(method) #%>%
#summarize(observation_number = sum(number))
#ggplot(planet7, aes(x=method, y= number)) +
#geom_bar()
planets %>%
group_by(method)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
survey %>%
group_by(r) %>% # the variable(s) we are interested in summarizing over
summarize(counts = n()) %>% # n() will give the counts by the levels of the group_by variable
arrange(desc(counts)) # Sort the rows in descending order by the counts
survey <- read_csv("survey-240.csv")
str(survey)
#View(survey)
survey %>%
group_by(r) %>% # the variable(s) we are interested in summarizing over
summarize(counts = n()) %>% # n() will give the counts by the levels of the group_by variable
arrange(desc(counts)) # Sort the rows in descending order by the counts
survey <- survey %>%
rename(year = `2470966: What year are you in school?`,
programming=`2470968: How much programming experience do you have?`,
r = `2470974: How much experience with R or RStudio do you have?`,
stat=`2470975: Have you previously take a statistics course?`,
cs=`2470976: Have you previously take a computer science course?`,
superpower=`2470978: If you could have one of the following super powers, which would you choose?`,
number=`2470979: Pick a number between 0 and 9.`,
hand=`2470991: What is your preferred hand?`,
dogcat=`2470992: Are you a "dog person" or a "cat person"?`,
dwarf=`2470995: Which of the Seven Dwarfs from Snow White are you most like?`,
sleep=`2470997: On average, how many hours of sleep do you get each night?`,
exercise=`2470999: During a typical week, how many hours do you spend exercising?`,
tv=`2471000: During a typical week, how many hours do you spend watching television?`
)
survey %>%
head()
survey %>%
group_by(r) %>% # the variable(s) we are interested in summarizing over
summarize(counts = n()) %>% # n() will give the counts by the levels of the group_by variable
arrange(desc(counts)) # Sort the rows in descending order by the counts
planets %>%
group_by(method) %>%
summarize(counts=n())
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
planets7
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts)) +
geom_bar()
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method)) +
geom_bar()
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7) +
geom_bar()
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7) +
geom_bar(x=method, y=counts)
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
geom_bar(data=planets7)
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7) +
geom_bar(aes(x=method))
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7) +
geom_bar(aes(x=method))
planets7
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7) +
geom_histogram(aes(x=method))
planets7
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7) +
geom_histogram(aes(x=method))
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7) +
geom_histogram(aes(x=method, y=counts))
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aex(x=method)) +
geom_histogram()
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method)) +
geom_histogram()
ggplot(planets, aes(x = year, y = log10(mass), color = method)) +
geom_point() +
xlab("Discovery Year") +
ylab("log10(Mass/Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="using y = log10(mass)")
planets7 = planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts)) +
geom_histogram()
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts)) +
geom_histogram()
planets7
ggplot(planets7, aes(x=method, y=counts)) +
geom_histogram()
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts)) +
geom_histogram(stat='identity')
ggplot(planets7, aes(x=method, y=counts)) +
geom_histogram(stat='identity') +
ggtitle("Counts of each Observation Methods")
ggplot(planets7, aes(x=method, y=counts), color = method) +
geom_histogram(stat='identity') +
ggtitle("Counts of each Observation Methods")
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts), fill = 'blue') +
geom_histogram(stat='identity') +
ggtitle("Counts of each Observation Methods")
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts), fill = "blue") +
geom_histogram(stat='identity') +
ggtitle("Counts of each Observation Methods")
planets7
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts), fill = "blue") +
geom_histogram(stat='identity') +
ggtitle("Counts of each Observation Methods")
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts)) +
geom_histogram(stat='identity') +
ggtitle("Counts of each Observation Methods")
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7) +
geom_bar(mapping=aes(x=method, y=counts)) +
ggtitle("Counts of each Observation Methods")
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7) +
geom_bar(mapping=aes(x=method) +
ggtitle("Counts of each Observation Methods")
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts)) +
geom_bar(stat='identity') +
ggtitle("Counts of each Observation Methods")
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts, color=method)) +
geom_bar(stat='identity') +
ggtitle("Counts of each Observation Methods")
planets7 <- planets %>%
group_by(method) %>%
summarize(counts=n())
ggplot(planets7, aes(x=method, y=counts, fill=method)) +
geom_bar(stat='identity') +
ggtitle("Counts of each Observation Methods")
mendota_interval = read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na() %>%
## question (b) end
## question (c) begin
separate(winter,into = c("year1","year2"), remove = FALSE) %>%
mutate(year1 = as.numeric(year1)) %>%
mutate(year2 = year1+1) %>%
## question (c) end
mutate(closed = case_when(
str_detect(closed,"Oct|Nov|Dec") ~ str_c(closed,' ',year1),
str_detect(closed,"Jan|Feb|Mar|Apr|May") ~ str_c(closed,' ',year2),
TRUE ~ NA_character_
)) %>%
mutate(closed = dmy(closed)) %>%
mutate(open = case_when(
str_detect(open,"Oct|Nov|Dec") ~ str_c(open,' ',year1),
str_detect(open,"Jan|Feb|Mar|Apr|May") ~ str_c(open,' ',year2),
TRUE ~ NA_character_
)) %>%
mutate(open = dmy(open)) %>%
mutate(days = open - closed)
mendota = mendota_interval %>%
## question (d) begin
group_by(winter) %>%
summarize(intervals = n(),
days = sum(days),
first_freeze = min(closed),
last_thaw = max(open)) %>%
## questions (d) end
mutate(year1 = as.numeric(str_sub(winter,1,4))) %>%
mutate(decade = floor(year1 / 10) * 10) %>%
select(winter,year1,everything())
mendota_interval = read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days
mendota_interval
mendota_interva
mendota_interval
mendota_interval = read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na()
mendota_interval
mendota_interval = read_csv("../../Data/lake-mendota-raw.csv") %>%
## question (a) begin
select(-days) %>%
## question (a) end
## question (b) begin
drop_na()
mendota_interval
knitr::opts_chunk$set(echo = FALSE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
## Read the US deaths data
## Read the US deaths data
us_deaths = read_csv("../../data/us-deaths.csv") %>%
select(-baseline) %>%
mutate(week_end_date = mdy(week_end_date))
## Read the S&P 500 data
sp500 = read_csv("../../data/sp500.csv") %>%
select(-`Adj Close`,-Volume)
View(us_deaths)
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = (actual_deaths / 10000)),color = viridis3[1]) +
geom_line(aes(y = (maximum_expected_deaths/10000)), color = viridis3[3]) +
geom_hline(yintercept=0)
scale_x_date(date_labels = "%b-%Y") +
xlab("Months") +
ylab("Actual Deaths & Expected Deaths")
ggplot(us_deaths, aes(x = week_end_date)) +
geom_line(aes(y = (actual_deaths / 10000)),color = viridis3[1]) +
geom_line(aes(y = (maximum_expected_deaths/10000)), color = viridis3[3]) +
geom_hline(yintercept=0) +
scale_x_date(date_labels = "%b-%Y") +
xlab("Months") +
ylab("Actual Deaths & Expected Deaths")
## Read in the csv file
## There is one row per exoplanet after applying `filter(default_flag != 0)`
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag != 0) %>%
select(pl_name, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(name=pl_name, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse) %>%
filter(mass <10000) %>%
drop_na()
ggplot(planets, aes(x = year, y = mass, color = method)) +
geom_point() +
scale_y_log10() +
xlab("Discovery Year") +
ylab("Mass (Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="Using scale_y_log10()")
ggplot(planets, aes(x = year, y = log10(mass), color = method)) +
geom_point() +
xlab("Discovery Year") +
ylab("log10(Mass/Earth Mass)") +
ggtitle("Exoplanets Mass vs. Discovery Year",
subtitle="using y = log10(mass)")
planets %>%
group_by(method)
planets %>%
group_by(method) %>%
summarize(n=n())
planets
data<- planets %>%
group_by(method) %>%
summarize(n=n())
ggplot(planets, aes(x=method)) +
geom
data<- planets %>%
group_by(method) %>%
summarize(n=n())
ggplot(planets, aes(x=method)) +
geom_bar()
ggplot(planets, aes(x=year, y=mass)) +
scale_y_log10() +
facet_wrap(~method)
ggplot(planets, aes(x=year, y=mass)) +
geom_point(position = position_jitter())
scale_y_log10() +
facet_wrap(~method)
ggplot(planets, aes(x=year, y=mass)) +
geom_point(position = position_jitter()) +
scale_y_log10() +
facet_wrap(~method)
ggplot(planets, aes(x=year, y=mass)) +
geom_point(position = position_jitter(height=0)) +
scale_y_log10() +
facet_wrap(~method)
ggplot(planets, aes(x=year, y=mass)) +
geom_point(position = position_jitter(height=0)) +
scale_y_log10() +
facet_grid(~method)
ggplot(planets, aes(x=year, y=mass)) +
geom_point(position = position_jitter(width=.25,height=0)) +
scale_y_log10() +
facet_grid(~method)
ggplot(planets, aes(x=year, y=mass)) +
geom_point(position = position_jitter(width=.25)) +
scale_y_log10() +
facet_grid(~method)
ggplot(planets, aes(x=year, y=mass)) +
geom_point(position = position_jitter(width=.25,height=0)) +
scale_y_log10() +
facet_grid(~method)
ggplot(planets, aes(x=year, y=mass)) +
geom_point(position = position_jitter(width=.25,height=0)) +
scale_y_log10() +
facet_grid(~method) +
xlab("Discovery Year") +
ylab("Mass (Earth Mass)") +
ggtitle("Exoplanets Mass vs Discovery Year")
ggplot(planets, aes(x=method)) +
geom_bar()
ggplot(planets, aes(x=method, y=stat(prop), group=1)) +
geom_bar()
