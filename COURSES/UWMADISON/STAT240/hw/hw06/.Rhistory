1985 <= yearID & yearID <= 1989 ~ "1985-1989",
1990 <= yearID & yearID <= 1994 ~ "1990-1994",
1995 <= yearID & yearID <= 1999 ~ "1995-1999",
2000 <= yearID & yearID <= 2004 ~ "2000-2004",
2005 <= yearID & yearID <= 2009 ~ "2005-2009",
2010 <= yearID & yearID <= 2014 ~ "2010-2014",
))
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
labels[2]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
1985 <= yearID & yearID <= 1989 ~ "1985-1989",
1990 <= yearID & yearID <= 1994 ~ "1990-1994",
1995 <= yearID & yearID <= 1999 ~ "1995-1999",
2000 <= yearID & yearID <= 2004 ~ "2000-2004",
2005 <= yearID & yearID <= 2009 ~ "2005-2009",
2010 <= yearID & yearID <= 2014 ~ "2010-2014",
))
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breks[1], breaks[2], breaks[3]
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[1], breaks[2], breaks[3]
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[1]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
1985 <= yearID & yearID <= 1989 ~ labels[1],
1990 <= yearID & yearID <= 1994 ~ labels[2],
1995 <= yearID & yearID <= 1999 ~ labels[3],
2000 <= yearID & yearID <= 2004 ~ labels[4],
2005 <= yearID & yearID <= 2009 ~ labels[5],
2010 <= yearID & yearID <= 2014 ~ labels[6],
))
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[1]+1
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
1985 <= yearID & yearID <= 1989 ~ labels[1],
1990 <= yearID & yearID <= 1994 ~ labels[2],
1995 <= yearID & yearID <= 1999 ~ labels[3],
2000 <= yearID & yearID <= 2004 ~ labels[4],
2005 <= yearID & yearID <= 2009 ~ labels[5],
2010 <= yearID & yearID <= 2014 ~ labels[6],
))
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[2]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
breaks[1]+1 <= yearID & yearID <= 1989 ~ labels[1],
1990 <= yearID & yearID <= 1994 ~ labels[2],
1995 <= yearID & yearID <= 1999 ~ labels[3],
2000 <= yearID & yearID <= 2004 ~ labels[4],
2005 <= yearID & yearID <= 2009 ~ labels[5],
2010 <= yearID & yearID <= 2014 ~ labels[6],
))
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[3]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
breaks[1]+1 <= yearID & yearID <= breaks[2] ~ labels[1],
1990 <= yearID & yearID <= 1994 ~ labels[2],
1995 <= yearID & yearID <= 1999 ~ labels[3],
2000 <= yearID & yearID <= 2004 ~ labels[4],
2005 <= yearID & yearID <= 2009 ~ labels[5],
2010 <= yearID & yearID <= 2014 ~ labels[6],
))
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[3]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
breaks[1]+1 <= yearID & yearID <= breaks[2] ~ labels[1],
breaks[2]+1 <= yearID & yearID <= breaks[3] ~ labels[2],
breaks[3]+1 <= yearID & yearID <= breaks[4] ~ labels[3],
breaks[4]+1 <= yearID & yearID <= breaks[5] ~ labels[4],
breaks[5]+1 <= yearID & yearID <= breaks[6] ~ labels[5],
breaks[6]+1 <= yearID & yearID <= breaks[7] ~ labels[6],
))
head(df_1)
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
scale_y_log10() +
facet_wrap(~period)
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
geom_boxplot()
scale_y_log10() +
facet_wrap(~period)
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
geom_boxplot() +
scale_y_log10() +
facet_wrap(~period)
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
geom_boxplot() +
scale_y_log10() +
facet_wrap(~period) +
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[3]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
breaks[1]+1 <= yearID & yearID <= breaks[2] ~ labels[1],
breaks[2]+1 <= yearID & yearID <= breaks[3] ~ labels[2],
breaks[3]+1 <= yearID & yearID <= breaks[4] ~ labels[3],
breaks[4]+1 <= yearID & yearID <= breaks[5] ~ labels[4],
breaks[5]+1 <= yearID & yearID <= breaks[6] ~ labels[5],
breaks[6]+1 <= yearID & yearID <= breaks[7] ~ labels[6],
))
head(df_1)
df_1 %>%
filter(is.na(salary))
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[3]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
breaks[1]+1 <= yearID & yearID <= breaks[2] ~ labels[1],
breaks[2]+1 <= yearID & yearID <= breaks[3] ~ labels[2],
breaks[3]+1 <= yearID & yearID <= breaks[4] ~ labels[3],
breaks[4]+1 <= yearID & yearID <= breaks[5] ~ labels[4],
breaks[5]+1 <= yearID & yearID <= breaks[6] ~ labels[5],
breaks[6]+1 <= yearID & yearID <= breaks[7] ~ labels[6],
))
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[3]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
breaks[1]+1 <= yearID & yearID <= breaks[2] ~ labels[1],
breaks[2]+1 <= yearID & yearID <= breaks[3] ~ labels[2],
breaks[3]+1 <= yearID & yearID <= breaks[4] ~ labels[3],
breaks[4]+1 <= yearID & yearID <= breaks[5] ~ labels[4],
breaks[5]+1 <= yearID & yearID <= breaks[6] ~ labels[5],
breaks[6]+1 <= yearID & yearID <= breaks[7] ~ labels[6],
))
head(df_1)
df_1 %>%
filter(is.na(period))
View(salaries_1)
## Read in the appropriate data files
players <- read_csv("../../data/baseball_players.csv")
salaries <- read_csv("../../data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > "1985-01-01" & finalGame < "2015-01-01")
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(!is.na(salary)) %>%
filter(1985 <= yearID & yearID <= 2014)
## Build requested data frame
df_1 <- full_join(players_1, salaries_1) %>%
drop_na()
head(df_1)
## Read in the appropriate data file
allstar <- read_csv("../../data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
all_star_players <- allstar_1$playerID
df_1 <- df_1 %>% mutate(allstar_status = ifelse(playerID%in%all_star_players, "allstar", "non_allstar"))
head(df_1)
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[3]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
breaks[1]+1 <= yearID & yearID <= breaks[2] ~ labels[1],
breaks[2]+1 <= yearID & yearID <= breaks[3] ~ labels[2],
breaks[3]+1 <= yearID & yearID <= breaks[4] ~ labels[3],
breaks[4]+1 <= yearID & yearID <= breaks[5] ~ labels[4],
breaks[5]+1 <= yearID & yearID <= breaks[6] ~ labels[5],
breaks[6]+1 <= yearID & yearID <= breaks[7] ~ labels[6],
))
head(df_1)
df_1 %>%
filter(is.na(period))
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[3]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
breaks[1]+1 <= yearID & yearID <= breaks[2] ~ labels[1],
breaks[2]+1 <= yearID & yearID <= breaks[3] ~ labels[2],
breaks[3]+1 <= yearID & yearID <= breaks[4] ~ labels[3],
breaks[4]+1 <= yearID & yearID <= breaks[5] ~ labels[4],
breaks[5]+1 <= yearID & yearID <= breaks[6] ~ labels[5],
breaks[6]+1 <= yearID & yearID <= breaks[7] ~ labels[6],
))
head(df_1)
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
geom_boxplot() +
scale_y_log10() +
facet_wrap(~period) +
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
knitr::opts_chunk$set(echo = TRUE,
message=FALSE,
warning=FALSE,
cache = FALSE)
library(tidyverse)
library(lubridate)
library(stringr)
source("../../scripts/viridis.R")
food <- read.csv("../../data/food.csv")
food
food %>%
group_by(category) %>%
slice_max(price, n = 1)
dmy("03-Mar-2020")
knitr::opts_chunk$set(echo = TRUE,
message=FALSE,
warning=FALSE,
cache = FALSE)
library(tidyverse)
library(lubridate)
library(stringr)
source("../../scripts/viridis.R")
knitr::include_graphics("census-regions.png")
states <- read_csv("../../data/states.csv")
states = states %>%
mutate(pct_dem = 100 * poll_2020_D / (poll_2020_D + poll_2020_R))
ggplot(states, aes(x=urban_index, y=pct_dem)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
xlab("Urban Index") +
ylab("Relative % Democratic") +
ggtitle("Democratic Support versus Urbanity",
subtitle = "2020 US Presidential Election State Polls")
states <- read_csv("../../data/states.csv") %>%
mutate(pct_dem = 100 * poll_2020_D / (poll_2020_D + poll_2020_R))
ggplot(states, aes(x=urban_index, y=pct_dem)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
xlab("Urban Index") +
ylab("Relative % Democratic") +
ggtitle("Democratic Support versus Urbanity",
subtitle = "2020 US Presidential Election State Polls")
states
states <- read_csv("../../data/states.csv") %>%
mutate(pct_dem = 100 * poll_2020_D / (poll_2020_D + poll_2020_R))
ggplot(states, aes(x=urban_index, y=pct_dem)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
xlab("Urban Index") +
ylab("Relative % Democratic") +
ggtitle("Democratic Support versus Urbanity",
subtitle = "2020 US Presidential Election State Polls")
states %>%
group_by(region) %>%
summarize(avg_pct_dem = mean(pct_dem), avg_urban_index = mean(urban_index)) %>%
arrange(avg_urban_index)
states <- states %>%
mutate(lean_d = ifelse(lean!="EVEN", substring(lean, regexpr("+", lean) + 2), 0)) %>%
mutate(lean_d = ifelse( str_sub(lean,1,1) == "R", str_c("-", lean_d), lean_d))
states
ggplot(states, aes(x=pct_bach, y=lean_d, color=region)) +
geom_point() +
geom_smooth(aes(group = 1), method = "lm", se = FALSE) +
xlab("% Adults 25+ with at least Bachelor's") +
ylab("Lean Democratic Party") +
ggtitle("US State Political Lean by Education")
## Read in the appropriate data files
players <- read_csv("../../data/baseball_players.csv")
salaries <- read_csv("../../data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > "1985-01-01" & finalGame < "2015-01-01")
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(!is.na(salary)) %>%
filter(1985 <= yearID & yearID <= 2014)
## Build requested data frame
df_1 <- full_join(players_1, salaries_1) %>%
drop_na()
head(df_1)
View(players_1)
View(salaries_1)
## Read in the appropriate data files
players <- read_csv("../../data/baseball_players.csv")
salaries <- read_csv("../../data/baseball_salaries.csv")
## Find players based on debut and finalGame
players_1 <- players %>%
select(playerID, debut, finalGame) %>%
drop_na() %>%
filter(debut > "1985-01-01" & finalGame < "2015-01-01")
## Create salary data frame
salaries_1 <- salaries %>%
select(playerID, yearID, salary) %>%
filter(!is.na(salary)) %>%
filter(1985 <= yearID & yearID <= 2014)
## Build requested data frame
df_1 <- full_join(players_1, salaries_1) %>%
drop_na()
head(df_1)
## Read in the appropriate data file
allstar <- read_csv("../../data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
all_star_players <- allstar_1$playerID
df_1 <- df_1 %>% mutate(allstar_status = ifelse(playerID%in%all_star_players, "allstar", "non_allstar"))
head(df_1)
allstar_1
all_star_players
## Read in the appropriate data file
allstar <- read_csv("../../data/baseball_allstar.csv")
## Find unique playerIDs in allstar data frame
## This includes a count of the number appearances per playerID
allstar_1 <- allstar %>%
group_by(playerID) %>%
summarize(n = n())
## Build requested data frame
all_star_players <- allstar_1$playerID
df_1 <- df_1 %>% mutate(allstar_status = ifelse(playerID%in%all_star_players, "allstar", "non_allstar"))
head(df_1)
df_1
## Set labels for period variable
breaks <- seq(1984,2014,5)
labels <- str_c((breaks+1)[-length(breaks)],breaks[-1],sep="-")
# "1985-1989" "1990-1994" "1995-1999" "2000-2004" "2005-2009" "2010-2014"
breaks[3]
## Build requested data frame
df_1 <- df_1 %>%
mutate(period =
case_when(
breaks[1]+1 <= yearID & yearID <= breaks[2] ~ labels[1],
breaks[2]+1 <= yearID & yearID <= breaks[3] ~ labels[2],
breaks[3]+1 <= yearID & yearID <= breaks[4] ~ labels[3],
breaks[4]+1 <= yearID & yearID <= breaks[5] ~ labels[4],
breaks[5]+1 <= yearID & yearID <= breaks[6] ~ labels[5],
breaks[6]+1 <= yearID & yearID <= breaks[7] ~ labels[6],
))
head(df_1)
View(df_1)
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
geom_boxplot(coef=10) +
scale_y_log10() +
facet_wrap(~period) +
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
geom_boxplot(coef=5) +
scale_y_log10() +
facet_wrap(~period) +
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
geom_boxplot(coef=10000) +
scale_y_log10() +
facet_wrap(~period) +
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
geom_boxplot(coef=10000) +
scale_y_log10() +
facet_wrap(~period) +
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
ggplot(df_1, aes(x=allstar_status, y=salary/1000, color=allstar_status)) +
geom_boxplot(coef=0) +
scale_y_log10() +
facet_wrap(~period) +
xlab("All Star status") +
ylab("Salary (thousands)") +
scale_y_continuous(trans='log10') +
ggtitle("Baseball Salaries and All Star Status",
subtitle = "1985 - 2014")
str_detect("+++abc", "\+\d+")
str_detect("+++abc", "\\+\d+")
str_detect("+++abc", "\\+\\d+")
str_detect("+abc", "\\+\\d+")
str_detect("+012", "\\+\\d+")
str_detect("+++012", "\\+\\d+")
str_detect("012", "\\+\\d+")
str_detect("++++++0a2", "\\+\\d+")
str_detect("++++++0", "\\+\\d+")
str_detect("++++++0", "\\+\\d{3}")
str_detect("++++++01", "\\+\\d{3}")
str_detect("++++++012", "\\+\\d{3}")
str_detect("++++++0124", "\\+\\d{3}")
str_detect("++++++0124", "\\+\d{3}")
str_detect("++++++0124", "\\+\\d{3}")
str_detect("++++++0", "\\+\\d{3}")
str_detect("++++++0", "\\+\\d\\d\\d")
str_detect("++++++01", "\\+\\d\\d\\d")
str_detect("++++++012", "\\+\\d\\d\\d")
str_detect("++++++0123", "\\+\\d\\d\\d")
str_detect("++++++01234", "\\+\\d\\d\\d")
str_detect("++++++01234", "\\+\\d.{3}")
str_detect("01234", "\\+\\d{3}")
str_detect("+01234", "\\+\\d{3}")
str_detect("+++01234", "\\+\\d{3}")
str_detect("+++01234", "[\\+\\d{3}]")
str_detect("+++012", "[\\+\\d{3}]")
str_detect("+++012", "\\+[\d]{3}")
str_detect("+++012", "\\+[\\d]{3}")
str_detect("+++012", "\\+[\\d]{3}")
str_detect("+++0123", "\\+[\\d]{3}")
str_detect("012", "[\\d]{3}")
str_detect("+++0123", "\\+[\\d]{3}")
str_detect("0123", "[\\d]{3}")
str_detect("+++0123", "\\+[\\d]{3}")
str_detect("0123", "\\d{3}")
str_detect("+++0123", "\\+[\\d]{3}")
str_detect("0123", "\d{3}")
str_detect("+++0123", "\\+[\\d]{3}")
str_detect("0123", \d{3})
str_detect("+++0123", "\\+[\\d]{3}")
str_detect("+++0123", "\\+[\\d]{3}")
knitr::include_graphics("census-regions.png")
