se_agresti = sqrt(p_hat * (1-p_hat)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp %>%
filter(with_partner == TRUE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3 <- chimp %>%
filter(with_partner == TRUE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat))
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_agresti, yend=b_agresti), color="blue")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=actor, y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_agresti, yend=b_agresti), color="blue")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=x=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees' Confidence Intervals using Wald & Agresti Method")
chimp_3 <- chimp %>%
filter(with_partner == TRUE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_hat * (1-p_hat)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees' Confidence Intervals using Wald & Agresti Method")
chimp_3 <- chimp %>%
filter(with_partner == TRUE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees' Confidence Intervals using Wald & Agresti Method")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.5 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.5, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees' Confidence Intervals using Wald & Agresti Method")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees' Confidence Intervals using Wald & Agresti Method")
chimp_3 <- chimp %>%
filter(with_partner == TRUE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees' Confidence Intervals using Wald & Agresti Method")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde))
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees' Confidence Intervals using Wald & Agresti Method")
chimp <- read_csv("../../data/chimpanzee.csv") %>%
mutate(with_partner = case_when(
partner == "none" ~ FALSE,
TRUE ~ TRUE))
chimp_1 <- chimp %>%
select(actor, prosocial, selfish, with_partner) %>%
mutate(n = prosocial + selfish, p_hat = round(prosocial / n,3)) %>%
group_by(with_partner) %>%
summarize(p_hat = mean(p_hat), n = sum(n)) %>%
mutate(se = sqrt(p_hat * (1-p_hat) / n),
ci_a = round(p_hat - 1.96 * se, 3),
ci_b = round(p_hat + 1.96 * se,3),
se_a = round(p_hat - se, 3),
se_b = round(p_hat + se, 3))
ggplot(chimp_1, aes(x=with_partner, y=p_hat)) +
geom_point(size=3, color="orange") +
geom_hline(yintercept = 0.5, color="red") +
geom_segment(chimp_1, mapping=aes(x=with_partner,xend=with_partner, y=ci_a, yend=ci_b), color="blue", size=1) +
geom_segment(chimp_1, mapping=aes(x=with_partner, xend=with_partner, y = se_a, yend=se_b), color="black", size=2)
binom_se <-  function(n,p)
{
return ( sqrt( p*(1-p)/n) )
}
binom_ci <- function(est,se,conf)
{
z <- qnorm(1 - (1 - conf)/2)
me <- z * se
ci <- est + c(-1,1)*me
return(ci)
}
chimp_2 <- chimp %>%
filter(actor == "F" & with_partner == TRUE) %>%
select(actor, prosocial, selfish, with_partner) %>%
mutate(n = prosocial + selfish,
p_hat = round(prosocial / n, 3),
se = round(sqrt(p_hat * (1-p_hat) / n), 3)) %>%
summarize(p_hat = mean(p_hat), n=sum(n) )
se = binom_se(chimp_2$n, chimp_2$p_hat)
binom_ci(chimp_2$p_hat, se, 0.99)
binom_ci(chimp_2$p_hat, se, 0.95)
binom_ci(chimp_2$p_hat, se, 0.90)
binom_ci(chimp_2$p_hat, se, 0.8)
chimp_3 <- chimp %>%
filter(with_partner == TRUE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
prosocial + selfish
chimp_3 <- chimp %>%
filter(with_partner == TRUE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
#source("../../scripts/ggprob.R")
chimp <- read_csv("../../data/chimpanzee.csv") %>%
mutate(with_partner = case_when(
partner == "none" ~ FALSE,
TRUE ~ TRUE))
chimp_1 <- chimp %>%
select(actor, prosocial, selfish, with_partner) %>%
mutate(n = prosocial + selfish, p_hat = round(prosocial / n,3)) %>%
group_by(with_partner) %>%
summarize(p_hat = mean(p_hat), n = sum(n)) %>%
mutate(se = sqrt(p_hat * (1-p_hat) / n),
ci_a = round(p_hat - 1.96 * se, 3),
ci_b = round(p_hat + 1.96 * se,3),
se_a = round(p_hat - se, 3),
se_b = round(p_hat + se, 3))
ggplot(chimp_1, aes(x=with_partner, y=p_hat)) +
geom_point(size=3, color="orange") +
geom_hline(yintercept = 0.5, color="red") +
geom_segment(chimp_1, mapping=aes(x=with_partner,xend=with_partner, y=ci_a, yend=ci_b), color="blue", size=1) +
geom_segment(chimp_1, mapping=aes(x=with_partner, xend=with_partner, y = se_a, yend=se_b), color="black", size=2)
binom_se <-  function(n,p)
{
return ( sqrt( p*(1-p)/n) )
}
binom_ci <- function(est,se,conf)
{
z <- qnorm(1 - (1 - conf)/2)
me <- z * se
ci <- est + c(-1,1)*me
return(ci)
}
chimp_2 <- chimp %>%
filter(actor == "F" & with_partner == TRUE) %>%
select(actor, prosocial, selfish, with_partner) %>%
mutate(n = prosocial + selfish,
p_hat = round(prosocial / n, 3),
se = round(sqrt(p_hat * (1-p_hat) / n), 3)) %>%
summarize(p_hat = mean(p_hat), n=sum(n) )
se = binom_se(chimp_2$n, chimp_2$p_hat)
binom_ci(chimp_2$p_hat, se, 0.99)
binom_ci(chimp_2$p_hat, se, 0.95)
binom_ci(chimp_2$p_hat, se, 0.90)
binom_ci(chimp_2$p_hat, se, 0.8)
chimp_3 <- chimp %>%
filter(with_partner == TRUE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees' Confidence Intervals using Wald & Agresti Method")
chimp_4 <- chimp %>%
filter(with_partner == FALSE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees'(with partners) Confidence Intervals using Wald & Agresti Method")
ggplot() +
geom_point(chimp_4, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_4, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_4, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_4, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees'(without partners) Confidence Intervals using Wald & Agresti Method")
chimp_3 <- chimp %>%
filter(with_partner == TRUE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)/ (n+4)) ,
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees'(with partners) Confidence Intervals using Wald & Agresti Method")
chimp_4 <- chimp %>%
filter(with_partner == FALSE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)) / (n+4),
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
chimp_4 <- chimp %>%
filter(with_partner == FALSE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)/ (n+4)) ,
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_3
ggplot() +
geom_point(chimp_4, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_4, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_4, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_4, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees'(without partners) Confidence Intervals using Wald & Agresti Method")
ggplot() +
geom_point(chimp_4, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_4, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_4, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_4, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees'(without partners) CIs using Wald & Agresti Method")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees'(with partners) CIs using Wald & Agresti Method")
ggplot() +
geom_point(chimp_3, mapping=aes(x=actor, y=p_hat)) +
geom_point(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15 , y=p_tilde)) +
geom_segment(chimp_3, mapping=aes(x=actor, xend=actor, y=a_wald, yend=b_wald), color="red") +
geom_segment(chimp_3, mapping=aes(x=as.integer(as.factor(actor))+0.15, xend=as.integer(as.factor(actor))+0.15, y=a_agresti, yend=b_agresti), color="blue") +
geom_hline(yintercept=0.5, color="black", linetype="dashed") +
xlab("Chimpanzees") +
ylab("Confidence Intervals of Wald Method & Agresti Method") +
ggtitle("Each Chimpanzees'(with partners) CIs using Wald & Agresti Method")
chimp_4 <- chimp %>%
filter(with_partner == FALSE) %>%
group_by(actor) %>%
summarize(n = sum(prosocial + selfish),
prosocial = sum(prosocial),
selfish = sum(selfish),
p_hat = prosocial / n,
se_wald = sqrt(p_hat * (1-p_hat) / n),
a_wald = p_hat - 1.645 * se_wald,
b_wald = p_hat + 1.645 * se_wald,
p_tilde = (prosocial + 2) / (n+4),
se_agresti = sqrt(p_tilde * (1-p_tilde)/ (n+4)) ,
a_agresti = p_tilde - 1.645 * se_agresti,
b_agresti = p_tilde + 1.645 * se_agresti)
chimp_4
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
#source("../../scripts/ggprob.R")
n <- 90
x <- 70
df <- tibble(pseq=seq(0,1,0.1), L=dbinom(x,n,pseq))
ggplot(df, aes(pseq, L)) +
geom_line() +
ggtitle(paste0("L(p|X=", x, ")")) +
geom_vline(xintercept=x/n, color="red", linetype="dashed") +
geom_vline(xintercept=(x+2)/(n+4), color="blue", linetype="dotted") +
xlab("p") +
ylab("L(p|X=70)") +
ggtitle("Likelihood function when X=70")
n <- 90
x <- 70
df <- tibble(pseq=seq(0,1,0.01), L=dbinom(x,n,pseq))
ggplot(df, aes(pseq, L)) +
geom_line() +
ggtitle(paste0("L(p|X=", x, ")")) +
geom_vline(xintercept=x/n, color="red", linetype="dashed") +
geom_vline(xintercept=(x+2)/(n+4), color="blue", linetype="dotted") +
xlab("p") +
ylab("L(p|X=70)") +
ggtitle("Likelihood function when X=70")
n <- 90
x <- 70
df <- tibble(pseq=seq(0,1,0.01), L=dbinom(x,n,pseq))
ggplot(df, aes(pseq, L)) +
geom_line() +
ggtitle(paste0("L(p|X=", x, ")")) +
geom_vline(xintercept=x/n, color="red", linetype="dashed") +
geom_vline(xintercept=(x+2)/(n+4), color="blue", linetype="dotted") +
xlab("p") +
ylab("L(p|X=70)") +
ggtitle("Likelihood function when X=70")
n <- 90
x <- 25
df <- tibble(pseq=seq(0,1,0.01), L=dbinom(x,n,pseq))
ggplot(df, aes(pseq, L)) +
geom_line() +
ggtitle(paste0("L(p|X=", x, ")")) +
geom_vline(xintercept=x/n, color="red", linetype="dashed") +
geom_vline(xintercept=(x+2)/(n+4), color="blue", linetype="dotted") +
xlab("p") +
ylab("L(p|X=25)") +
ggtitle("Likelihood function when X=25")
