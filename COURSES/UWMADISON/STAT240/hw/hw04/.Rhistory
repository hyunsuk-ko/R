filter(method != "Astrometry") %>%
filter(method != "Disk Kinematics") %>%
filter(method != "Eclipse Timing Variations") %>%
filter(method != "Orbital Brightness Modulation") %>%
filter(method != "Pulsar Timing") %>%
filter(method != "Pulsar Timing Variations") %>%
filter(!is.na(mass))
ggplot(data, aes(x=method, y=mass/317.8, color=method)) +
geom_boxplot(coef=Inf) +
scale_y_continuous(trans="log10") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
?scale_size_binned()
knitr::opts_chunk$set(echo = TRUE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
## Read in the csv file
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag == 1) %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse)
planets %>%
filter(method == 'Transit' | method == 'Radial Velocity') %>%
drop_na() %>%
group_by(method) %>%
summarize( min=min(mass), percentile = quantile(mass, .25), mean=mean(mass), median=median(mass), max=max(mass) )
planets %>%
filter(mass <= 1) %>%
drop_na() %>%
summarize(n=n(), min=min(mass), max=max(mass))
planets %>%
filter(radius <= 1) %>%
drop_na() %>%
summarize(n=n(), min=min(radius), max=max(radius))
planets %>%
filter(mass < 1 & radius < 1) %>%
select(planet, star, method, mass, radius)
planets %>%
filter(mass <= 1 & radius <= 1) %>%
pull(star)
planets %>%
slice_max(mass, n=3) %>%
mutate(mass_j = mass/317.8)
data<- planets %>%
filter(method != "Astrometry") %>%
filter(method != "Disk Kinematics") %>%
filter(method != "Eclipse Timing Variations") %>%
filter(method != "Orbital Brightness Modulation") %>%
filter(method != "Pulsar Timing") %>%
filter(method != "Pulsar Timing Variations") %>%
filter(!is.na(mass))
ggplot(data, aes(x=method, y=mass/317.8, color=method)) +
geom_boxplot(coef=Inf) +
scale_y_continuous(trans="log10") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
mass_breaks <- data2 %>%
select(mass) %>%
summarize(min=min(mass), q25 = quantile(mass, .25), median=median(mass), q75 = quantile(mass, .75), max=max(mass))
data2<- planets %>%
filter(method != 'Transit') %>%
select(planet, method, year, radius, mass) %>%
drop_na()
mass_breaks <- data2 %>%
select(mass) %>%
summarize(min=min(mass), q25 = quantile(mass, .25), median=median(mass), q75 = quantile(mass, .75), max=max(mass))
ggplot(data2, aes(x=year, y=radius, color=method, size=mass)) +
geom_point()
mass_breaks
mass_breaks <- data2 %>%
select(mass) %>%
summarize(min=min(mass), q25 = quantile(mass, .25), median=median(mass), q75 = quantile(mass, .75), max=max(mass)) %>%
slice(1)
data2<- planets %>%
filter(method != 'Transit') %>%
select(planet, method, year, radius, mass) %>%
drop_na()
mass_breaks <- data2 %>%
select(mass) %>%
summarize(min=min(mass), q25 = quantile(mass, .25), median=median(mass), q75 = quantile(mass, .75), max=max(mass)) %>%
slice(1)
mass_breaks
ggplot(data2, aes(x=year, y=radius, color=method, size=mass)) +
geom_point()
data2<- planets %>%
filter(method != 'Transit') %>%
select(planet, method, year, radius, mass) %>%
drop_na()
mass_breaks <- data2 %>%
select(mass) %>%
summarize(min=min(mass), q25 = quantile(mass, .25), median=median(mass), q75 = quantile(mass, .75), max=max(mass)) %>%
slice(1)
mass_breaks
ggplot(data2, aes(x=year, y=radius, color=method, size=mass)) +
geom_point() +
xlab("Discovery Year") +
ylab("Estimated raidus (Earth Radius)") +
scale_size_binned(breaks=mass_breaks) +
labs(color="Method", size="Mass")
data2<- planets %>%
filter(method != 'Transit') %>%
select(planet, method, year, radius, mass) %>%
drop_na()
mass_breaks <- data2 %>%
select(mass) %>%
summarize(min=min(mass), q25 = quantile(mass, .25), median=median(mass), q75 = quantile(mass, .75), max=max(mass)) %>%
slice(1)
mass_breaks
ggplot(data2, aes(x=year, y=radius, color=method, size=mass)) +
geom_point() +
xlab("Discovery Year") +
ylab("Estimated raidus (Earth Radius)") +
scale_size_binned(breaks=mass_breaks)
#+ labs(color="Method", size="Mass")
data2<- planets %>%
filter(method != 'Transit') %>%
select(planet, method, year, radius, mass) %>%
drop_na()
mass_breaks <- data2 %>%
select(mass) %>%
summarize(min=min(mass), q25 = quantile(mass, .25), median=median(mass), q75 = quantile(mass, .75), max=max(mass)) %>%
slice(1)
mass_breaks
ggplot(data2, aes(x=year, y=radius, color=method, size=mass)) +
geom_point() +
xlab("Discovery Year") +
ylab("Estimated raidus (Earth Radius)") +
scale_size_binned(breaks=mass_breaks)
+ labs(color="Method", size="Mass")
data2<- planets %>%
filter(method != 'Transit') %>%
select(planet, method, year, radius, mass) %>%
drop_na()
mass_breaks <- data2 %>%
select(mass) %>%
summarize(min=min(mass), q25 = quantile(mass, .25), median=median(mass), q75 = quantile(mass, .75), max=max(mass)) %>%
slice(1)
mass_breaks
ggplot(data2, aes(x=year, y=radius, color=method, size=mass)) +
geom_point() +
xlab("Discovery Year") +
ylab("Estimated raidus (Earth Radius)") +
scale_size_binned(breaks=mass_breaks) +
labs(color="Method", size="Mass")
breaks = c(1980, 1990, 2000, 2010, 2020)
labels = c("1981-1990", "1991-2000", "2001-2010", "2011-2020")
planets %>%
mutate(decades = cut(year, breaks=breaks, labels=labels)) %>%
drop_na(mass)
breaks = c(1980, 1990, 2000, 2010, 2020)
labels = c("1981-1990", "1991-2000", "2001-2010", "2011-2020")
decade_planets<- planets %>%
mutate(decades = cut(year, breaks=breaks, labels=labels)) %>%
drop_na(mass)
ggplot(decade_planets, aes(x=decade, y=mass)) +
geom_boxplot() +
scale_y_continuous(trans="log10") +
xlab("Decade") +
ylab("Mass (Earth Mass")
breaks = c(1980, 1990, 2000, 2010, 2020)
labels = c("1981-1990", "1991-2000", "2001-2010", "2011-2020")
decade_planets<- planets %>%
mutate(decades = cut(year, breaks=breaks, labels=labels)) %>%
drop_na(mass)
ggplot(decade_planets, aes(x=decades, y=mass)) +
geom_boxplot() +
scale_y_continuous(trans="log10") +
xlab("Decade") +
ylab("Mass (Earth Mass")
planets %>%
mutate(planet_order = str_sub(planet,-1))
planets %>%
mutate(planet_order = str_sub(planet,-1)) %>%
group_by(planet_order)
str_planets <- planets %>%
mutate(planet_order = str_sub(planet,-1)) %>%
group_by(planet_order)
ggplot(str_planets, aes(x=planet_order)) +
geom_bar()
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
library(readxl)
source("../../scripts/viridis.R")
library(readxl)
wasps <- read_excel("../../data/wasps-data.xlsx") %>%
rename(date = `Date Collected`,
block = Block,
position = Number,
lure = Lure,
maculifrons = `V. Maculifrons`,
flavopilosa = `V. Flavopilosa`,
germanica = `V. Germanica`,
vidua = `V. Vidua`) %>%
mutate(date = as_date(date)) %>%
mutate(week = as.integer(as.factor(date))) %>%
mutate(two_mb = as.integer(str_detect(lure,"2MB"))) %>%
mutate(aa = as.integer(str_detect(lure,"AA"))) %>%
mutate(ib = as.integer(str_detect(lure,"IB"))) %>%
select(date,week,everything())
wasps
wasps %>% count(date)
## repeat the above code for each noted variable
wasps %>% count(date)
wasps %>% group_by(date) %>% summarize(n=n())
## repeat the above code for each noted variable
#wasps %>% count(date)
wasps %>% group_by(date) %>% summarize(n=n())
## repeat the above code for each noted variable
wasps %>% count(date)
#wasps %>% group_by(date) %>% summarize(n=n())
wasps %>% count(block)
## repeat the above code for each noted variable
wasps %>% count(date)
#wasps %>% group_by(date) %>% summarize(n=n())
wasps %>% count(block)
wasps %>% count(position)
## repeat the above code for each noted variable
wasps %>% count(date)
#wasps %>% group_by(date) %>% summarize(n=n())
wasps %>% count(block)
wasps %>% count(position)
wasps %>% count(lure)
## repeat the above code for each noted variable
wasps %>% count(date)
#wasps %>% group_by(date) %>% summarize(n=n())
#wasps %>% count(block)
wasps %>% group_by(block) %>% summarize(n=n())
#wasps %>% count(position)
wasps %>% group_by(position) %>% summarize(n=n())
#wasps %>% count(lure)
wasps %>% group_by(lure) %>% summarize(n=n())
## repeat the above code for each noted variable
wasps %>% count(date)
#wasps %>% group_by(date) %>% summarize(n=n())
wasps %>% count(block)
#wasps %>% group_by(block) %>% summarize(n=n())
wasps %>% count(position)
#wasps %>% group_by(position) %>% summarize(n=n())
wasps %>% count(lure)
#wasps %>% group_by(lure) %>% summarize(n=n())
## repeat the above code for each noted variable
table2 <- wasps %>%
count(week,block,position)
dim(table2)
table2 <- wasps %>%
count(week,block,position)
dim(table2)
table2 %>%
filter(n==2)
wasps %>%
count(week,block,position)
table2 <- wasps %>%
count(week,block,position)
dim(table2)
table2 %>%
filter(n==2)
table2 %>%
filter(week == 2)
# table2 %>%
#   filter(XXX) %>%
#   ## The argument values_fill=0 will place a 0 instead of an NA
#   ##  in any place where there is no data from table2
#   pivot_wider(id_cols=XXX, names_from=XXX,values_from=XXX, values_fill=0)
table2 %>%
filter(week == 2) %>%
pivot_wider(names_from=position, values_from=n)
# table2 %>%
#   filter(XXX) %>%
#   ## The argument values_fill=0 will place a 0 instead of an NA
#   ##  in any place where there is no data from table2
#   pivot_wider(id_cols=XXX, names_from=XXX,values_from=XXX, values_fill=0)
table2 %>%
filter(week == 2) %>%
pivot_wider(id_cols=block, names_from=position, values_from=n)
wasps %>%
count(week,block,position) %>%
pivot_wider(id_cols=c(week,position), names_from=block,values_from=n, values_fill=0) %>%
pivot_longer(cols=A:E,names_to="block", values_to="n") %>%
filter(n != 1)
wasps %>%
count(week,block,position) %>%
pivot_wider(id_cols=c(week,position), names_from=block,values_from=n, values_fill=0) %>%
pivot_longer(cols=A:E,names_to="block", values_to="n")
wasps %>%
count(week,block,position) %>%
pivot_wider(id_cols=c(week,position), names_from=block,values_from=n, values_fill=0) %>%
pivot_longer(cols=A:E,names_to="block", values_to="n") %>%
filter(n != 1)
wasps %>%
select(week,block,lure) %>%
group_by(week) %>%
count(block,lure) %>%
pivot_wider(id_cols=c(week,lure),names_from=block, values_from=n,values_fill=0) %>%
pivot_longer(cols=A:E,names_to="block",values_to="n") %>%
filter(n != 1)
wasps <- wasps %>%
mutate(index = 1:200) %>%
select(index,everything())
wasps
knitr::opts_chunk$set(echo = TRUE,message=FALSE)
library(tidyverse)
library(scales)
library(lubridate)
source("../../scripts/viridis.R")
Sys.setlocale("LC_TIME", "English_United States.1252")
ord_2016 <- read.csv("../../data/ORD-2016.csv")
ord_2017 <- read.csv("../../data/ORD-2017.csv")
ord_2018 <- read.csv("../../data/ORD-2018.csv")
ord_2019 <- read.csv("../../data/ORD-2019.csv")
ord_2020 <- read.csv("../../data/ORD-2020.csv")
ord_2016 <- ord_2016 %>% mutate(date=mdy(date))
ord_2017 <- ord_2017 %>% mutate(date=mdy(date))
ord_2018 <- ord_2018 %>% mutate(date=mdy(date))
ord_2019 <- ord_2019 %>% mutate(date=ymd(date))
ord_2020 <- ord_2020 %>% mutate(date=ymd(date))
ord <- bind_rows(ord_2016, ord_2017, ord_2018, ord_2019, ord_2020)
ord <- ord %>%
mutate(year=year(date), month=month(date, label=TRUE), day=day(date), wday=wday(date, label=TRUE)) %>%
relocate(year, .after=date) %>%
relocate(month, .after=year) %>%
relocate(day, .after=month) %>%
relocate(wday, .after=day) %>%
select(-terminal) %>%
rename(passengers=all_total, flights=all_flights, booths=all_booths) %>%
arrange(date, hour)
rm(ord_2016, ord_2017, ord_2018, ord_2019, ord_2020)
str(ord)
Sys.setlocale("LC_TIME", "English_United States.1252")
ord2016 = read_csv("../../data/ORD-2016.csv")
View(ord2016)
Sys.setlocale("LC_TIME", "English_United States.1252")
ord2016 = read_csv("../../data/ORD-2016.csv") %>% mutate(date = mdy(date))
Sys.setlocale("LC_TIME", "English_United States.1252")
ord2016 = read_csv("../../data/ORD-2016.csv") %>% mutate(date = mdy(date))
ord2017 = read_csv("../../data/ORD-2017.csv")
ord2018 = read_csv("../../data/ORD-2018.csv")
ord2019 = read_csv("../../data/ORD-2019.csv")
ord2020 = read_csv("../../data/ORD-2020.csv")
View(ord2017)
View(ord2018)
View(ord2019)
View(ord2020)
Sys.setlocale("LC_TIME", "English_United States.1252")
ord2016 = read_csv("../../data/ORD-2016.csv") %>% mutate(date = mdy(date))
ord2017 = read_csv("../../data/ORD-2017.csv") %>% mutate(date = mdy(date))
ord2018 = read_csv("../../data/ORD-2018.csv") %>% mutate(date = mdy(date))
ord2019 = read_csv("../../data/ORD-2019.csv") %>% mutate(date = ymd(date))
ord2020 = read_csv("../../data/ORD-2020.csv") %>% mutate(date = ymd(date))
Sys.setlocale("LC_TIME", "English_United States.1252")
ord2016 = read_csv("../../data/ORD-2016.csv") %>% mutate(date = mdy(date))
ord2017 = read_csv("../../data/ORD-2017.csv") %>% mutate(date = mdy(date))
ord2018 = read_csv("../../data/ORD-2018.csv") %>% mutate(date = mdy(date))
ord2019 = read_csv("../../data/ORD-2019.csv")
ord2020 = read_csv("../../data/ORD-2020.csv")
Sys.setlocale("LC_TIME", "English_United States.1252")
ord2016 = read_csv("../../data/ORD-2016.csv") %>% mutate(date = mdy(date))
ord2017 = read_csv("../../data/ORD-2017.csv") %>% mutate(date = mdy(date))
ord2018 = read_csv("../../data/ORD-2018.csv") %>% mutate(date = mdy(date))
ord2019 = read_csv("../../data/ORD-2019.csv")
ord2020 = read_csv("../../data/ORD-2020.csv")
ord <- bind_rows(ord2016, ord2017, ord2018, ord2019, ord2020)
View(ord)
Sys.setlocale("LC_TIME", "English_United States.1252")
ord2016 = read_csv("../../data/ORD-2016.csv") %>% mutate(date = mdy(date))
ord2017 = read_csv("../../data/ORD-2017.csv") %>% mutate(date = mdy(date))
ord2018 = read_csv("../../data/ORD-2018.csv") %>% mutate(date = mdy(date))
ord2019 = read_csv("../../data/ORD-2019.csv")
ord2020 = read_csv("../../data/ORD-2020.csv")
ord <- bind_rows(ord2016, ord2017, ord2018, ord2019, ord2020) %>%
mutate(year=year(date), month=month(date, label=TRUE), day=day(date),
wday=wday(date, label=TRUE)) %>%
select(-terminal) %>%
select(airport, terminal, date, year, month, day, wday, everything())
Sys.setlocale("LC_TIME", "English_United States.1252")
ord2016 = read_csv("../../data/ORD-2016.csv") %>% mutate(date = mdy(date))
ord2017 = read_csv("../../data/ORD-2017.csv") %>% mutate(date = mdy(date))
ord2018 = read_csv("../../data/ORD-2018.csv") %>% mutate(date = mdy(date))
ord2019 = read_csv("../../data/ORD-2019.csv")
ord2020 = read_csv("../../data/ORD-2020.csv")
ord <- bind_rows(ord2016, ord2017, ord2018, ord2019, ord2020) %>%
mutate(year=year(date), month=month(date, label=TRUE), day=day(date),
wday=wday(date, label=TRUE)) %>%
select(airport, terminal, date, year, month, day, wday, everything()) %>%
select(-terminal) %>%
rename(passengers=all_total, flights=all_flights,booths=all_booths) %>%
arrange(date,hour)
Sys.setlocale("LC_TIME", "English_United States.1252")
ord2016 = read_csv("../../data/ORD-2016.csv") %>% mutate(date = mdy(date))
ord2017 = read_csv("../../data/ORD-2017.csv") %>% mutate(date = mdy(date))
ord2018 = read_csv("../../data/ORD-2018.csv") %>% mutate(date = mdy(date))
ord2019 = read_csv("../../data/ORD-2019.csv")
ord2020 = read_csv("../../data/ORD-2020.csv")
ord <- bind_rows(ord2016, ord2017, ord2018, ord2019, ord2020) %>%
mutate(year=year(date), month=month(date, label=TRUE), day=day(date),
wday=wday(date, label=TRUE)) %>%
select(airport, terminal, date, year, month, day, wday, everything()) %>%
select(-terminal) %>%
rename(passengers=all_total, flights=all_flights,booths=all_booths) %>%
arrange(date,hour)
rm(ord2016, ord2017, ord2018, ord2019, ord2020)
ord %>%
summarize(sum(is.na(date)))
dates <- ord["date"] %>%
distinct() %>%
unlist()
dates
count_na <- function(x)
{
return ( sum(is.na(x) ) )
}
ord %>%
summarize(sum(is.na(date)))
dates <- ord["date"] %>%
distinct() %>%
unlist()
missing_dates <- dates
date_seq <- seq(ymd("2016-01-01"), ymd("2020-06-30"), by = 1)
date_seq[!date_seq %in% missing_dates]
count_na <- function(x)
{
return ( sum(is.na(x) ) )
}
ord %>%
summarize(sum(is.na(date)))
# No rows with no data in "date" column.
all_dates <- tibble(
date = seq(ymd("2016-01-01", ymd("2020-06-30"), 1))
)
count_na <- function(x)
{
return ( sum(is.na(x) ) )
}
ord %>%
summarize(sum(is.na(date)))
# No rows with no data in "date" column.
all_dates <- tibble(
date = seq( ymd("2016-01-01"), ymd("2020-06-30"), 1) )
all_dates
count_na <- function(x)
{
return ( sum(is.na(x) ) )
}
ord %>%
summarize(sum(is.na(date)))
# No rows with no data in "date" column.
all_dates <- tibble(
date = seq( ymd("2016-01-01"), ymd("2020-06-30"), 1) )
ord_dates <- ord %>%
select(date)
ord_dates
count_na <- function(x)
{
return ( sum(is.na(x) ) )
}
ord %>%
summarize(sum(is.na(date)))
# No rows with no data in "date" column.
all_dates <- tibble(
date = seq( ymd("2016-01-01"), ymd("2020-06-30"), 1) )
ord_dates <- ord %>%
select(date) %>%
distinct()
ord_dates
count_na <- function(x)
{
return ( sum(is.na(x) ) )
}
ord %>%
summarize(sum(is.na(date)))
# No rows with no data in "date" column.
all_dates <- tibble(
date = seq( ymd("2016-01-01"), ymd("2020-06-30"), 1) )
ord_dates <- ord %>%
select(date) %>%
distinct()
all_dates %>%
left_join(ord_dates)
count_na <- function(x)
{
return ( sum(is.na(x) ) )
}
ord %>%
summarize(sum(is.na(date)))
# No rows with no data in "date" column.
all_dates <- tibble(
date = seq( ymd("2016-01-01"), ymd("2020-06-30"), 1) )
ord_dates <- ord %>%
select(date) %>%
distinct()
all_dates %>%
left_join(ord_dates, keep=TRUE)
count_na <- function(x)
{
return ( sum(is.na(x) ) )
}
ord %>%
summarize(sum(is.na(date)))
# No rows with no data in "date" column.
all_dates <- tibble(
date = seq( ymd("2016-01-01"), ymd("2020-06-30"), 1) )
ord_dates <- ord %>%
select(date) %>%
distinct()
all_dates %>%
left_join(ord_dates, keep=TRUE) %>%
filter(is.na(date.y))
