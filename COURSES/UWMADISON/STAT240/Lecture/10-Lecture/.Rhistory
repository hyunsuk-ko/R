geom_point() +
xlab("Family Szie") +
ylab("Proportion of Boys") +
scale_x_continuous(breaks=0:12) +
theme_bw()
round((g2$p_boys/g2$p_girls)*100,1)
## x is a vector of counts from 0 to size
##   with the number of families with that many boys
get_rstat <- function(x)
{
# x = 161  1152  3951  7603 10263  8498  4948  1655   264
n <- length(x) - 1 # n= 8
boys <- 0:n # boys = 0, 1, 2, 3, 4, 5, 6, 7, 8
observed_p <- x/sum(x) # sum(x) = 38495
#    boys         observed_p        est_p
#     0          0.004182361      0.5156189
#     1          0.029925964      0.5156189
#     2          0.102636706      0.5156189
#     3          0.197506170      0.5156189
#     4          0.266606053      0.5156189
#     5          0.220755942      0.5156189
#     6          0.128536174      0.5156189
#     7          0.042992596      0.5156189
#     8          0.006858034      0.5156189
est_p <- sum(boys*x) / sum(n*x) # est_p = 0.5156189
binom_p <- dbinom(boys, n, est_p)
return (sum(abs(observed_p - binom_p)) )
# calculate the sum of absolute differences between observed frequencies and the binomial estimated probabilities
}
x_8 <- geissler %>%
filter(size==8) %>%
pull(freq)
x_8
get_rstat(x_8)
p_8 <- sum(0:8*x_8) / sum(8*x_8) # Tot num of boys / Tot num of children
p_8
families_8 <- sum(x_8)
families_8
N <- 10000
test_8 <- numeric(N)
for ( i in 1:N ){
boys <- rbinom(families_8,8,p_8)
x <- tabulate(boys+1,nbin=9)
test_8[i] <- get_rstat(x)
}
df8 <- tibble(x=test_8)
df8
ggplot(df8, aes(x=x)) +
geom_density() +
geom_vline(xintercept = get_rstat(x_8),
color="red", linetype="dashed")
mean(test_8>=get_rstat(x_8))
size6 <- geissler %>%
filter(size==6) %>%
mutate(prop = freq/sum(freq))
size6_sum <- size6 %>%
summarize(
families = sum(freq),
boys = sum(boys*freq),
girls = sum(girls*freq),
total = sum(size*freq),
p_boy = boys/total,
p_girl = girls/total
)
size6_sum
p_6 <- size6_sum$p_boy
p_6
size6_sum$families
size6 <- size6 %>%
mutate(p_binom = dbinom(0:6,6,p_6))
binom_fit_plot(geissler,6)
## beta-binomial density
dbb <- function(x,n,a,b,log=FALSE)
{
log_d <- lchoose(n,x) +
lbeta(x+a,n-x+b) -
lbeta(a,b)
if ( log )
return ( log_d )
return ( exp( log_d ) )
}
## This function assumes that the sample x_1,\ldots,x_m
## (all assumed from the same beta-binomial distribution)
## has been summarized into a vector of length n+1
## with the tabulated counts for each outcome from 0 to n
## The function returns estimates of the mean and variance
mbb <- function(x)
{
n <- length(x) - 1
m <- sum(x)
mx <- sum((0:n)*x)/m
vx <- sum(x*(0:n - mx)^2)/m
return(tibble(mx,vx))
}
## Log-likelihood function for (mu,phi)
## mu = alpha/(alpha + beta)
## phi = alpha + beta
## x are the counts from 0 to n
## theta = c(mu,phi)
lmpbb <- function(theta,x)
{
mu <- theta[1]
phi <- theta[2]
alpha <- mu*phi
beta <- (1-mu)*phi
n <- length(x) - 1
return( sum(x*dbb(0:n,n,alpha,beta,log=TRUE)) )
}
## Use optim to find mle estimates of alpha and beta from counts
## Use method of moments to initialize the algorithm.
## Find mu and phi. Then translate to alpha and beta.
## If the returned convergence is not 0,
##   then there was an error in the optimization
mlebb <- function(x)
{
n <- length(x)-1
moments <- mbb(x)
mx <- moments$mx
vx <- moments$vx
mu_0 <- mx/n
phi_0 <- (n*n*mu_0*(1-mu_0) - vx)/(vx - n*mu_0*(1-mu_0))
opt <- optim(c(mu_0,phi_0),lmpbb,x=x,
control = list(fnscale=-1),
method = "L-BFGS-B",
lower = c(1e-7,1e-7),
upper = c(1-1e-7,Inf))
df <- tibble(
mu = opt$par[1],
phi = opt$par[2],
alpha = mu*phi,
beta = (1-mu)*phi,
logl = opt$value,
convergence = opt$convergence)
return( df )
}
size6
x6 <- size6 %>%
pull(freq)
x6
##
p_hat <- sum(x6*(0:6))/(6*sum(x6))
p_hat
logl_1 <- sum(x6*dbinom(0:6,6,p_hat,log=TRUE))
logl_1
bb_6 <- mlebb(x6)
bb_6
G <- -2 * (logl_1 - bb_6$logl)
G
p_value_1 <- 1 - pchisq(G,1) # P(X^2 >= G)
p_value_1
## use observed frequencies as the probabilities
x6
p_hat_2 <- x6/sum(x6)
p_hat_2
logl_2 <- sum(x6*log(p_hat_2))
logl_2
## use observed frequencies as the probabilities
x6
p_hat_2 <- x6/sum(x6)
p_hat_2
logl_2 <- sum(x6*log(p_hat_2))
logl_2
G2 <- -2 * (logl_1 - logl_2)
G2
p_value_2 <- 1 - pchisq(G2,5)
p_value_2
p_obs <- x6/sum(x6)
p_binom <- dbinom(0:6,6,p_hat)
p_bb <- dbb(0:6,6,bb_6$alpha,bb_6$beta)
tab_6 <- tibble(
boys = 0:6,
`# families` = x6,
observed = round(p_obs,5),
binomial = round(p_binom,5),
`beta-binomial` = round(p_bb,5),
general = round(p_obs,5))
library(kableExtra)
kable(tab_6) %>%
kable_styling(
bootstrap_options = c("striped", "condensed"),
full_width = FALSE)
ggplot(tab_6) +
geom_segment(aes(x = boys + 0.1, y = general,
xend = boys + 0.1, yend = 0),
color = "red") +
geom_segment(aes(x = boys, y = binomial,
xend = boys, yend = 0),
data = tab_6, color = "blue") +
geom_segment(aes(x = boys - 0.1, y = `beta-binomial`,
xend = boys - 0.1, yend = 0),
data = tab_6, color = "green") +
scale_x_continuous(breaks = 0:6) +
ggtitle("Comparison Between Three Models",
subtitle = "general = red, binomial = blue, beta-binomial = green") +
xlab("# of boys") +
ylab("probability")
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
source("../../scripts/beta-binomial.R")
geissler <- read.csv("../../data/geissler.csv")
geissler <- read.csv("../../data/geissler.csv")
g5 <- geissler %>%
filter(size == 5)
g5
geissler <- read.csv("../../data/geissler.csv")
g5 <- geissler %>%
filter(size == 5)
g5
g5_sum <- g5 %>%
summarize(
families = sum(freq),
children = sum(5 * freq),
boys = sum(boys*freq),
girls = sum(girls*freq),
p_boy = boys / children,
p_girl = girls / children,
sex_ratio = (boys/girls)*100
)
g5_sum
## Binomial Model
x5 <- g5 %>%
pull(freq)
x5
## Beta Binomial Model
g5_bb <- mlebb(g5$freq)
g5_bb
## Binomial Model
x5 <- g5 %>%
pull(freq)
p_hat <- sum(x5*(0:5)) / (5*sum(x5))
g5_binom <- sum(x5*dbinom(0:5,5,p_hat,log=TRUE))
g5_binom
## Beta Binomial Model
g5_bb <- mlebb(g5$freq)
g5_bb
## Binomial Model
x5 <- g5 %>%
pull(freq)
p_hat <- sum(x5*(0:5)) / (5*sum(x5))
g5_binom <- sum(x5*dbinom(0:5,5,p_hat,log=TRUE))
g5_binom
## Beta Binomial Model
g5_bb <- mlebb(g5$freq)
g5_bb$logl
## Binomial Model
x5 <- g5 %>%
pull(freq)
p_hat <- sum(x5*(0:5)) / (5*sum(x5))
g5_binom <- sum(x5*dbinom(0:5,5,p_hat,log=TRUE))
g5_binom
## Beta Binomial Model
g5_bb <- mlebb(g5$freq)
g5_bb
G <- 2 * (g5_bb$logl - g5$binom)
G
#gbeta(alpha = 71.1495,beta = 67.23828,a=0.3,b=0.7)
G <- 2 * (g5_bb$logl - g5_binom)
G
#gbeta(alpha = 71.1495,beta = 67.23828,a=0.3,b=0.7)
G <- 2 * (g5_bb$logl - g5_binom)
G
1 - pchisq(G,1)
#gbeta(alpha = 71.1495,beta = 67.23828,a=0.3,b=0.7)
G <- 2 * (g5_bb$logl - g5_binom)
G # Test Statistic
1 - pchisq(G,1) # p-value
gbeta(g5_bb$alpha, g5_bb$beta, a = 0.35, b = 0.65) +
ggtitle("Beta-Binomial Estimate of p",
subtitle = "Geissler data, n=5") +
xlab("P(boy) in a single birth")
install.packages("gbeta")
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
library(gbeta)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
source("../../scripts/beta-binomial.R")
G <- 2 * (g5_bb$logl - g5_binom)
G # Test Statistic
1 - pchisq(G,1) # p-value
gbeta(g5_bb$alpha, g5_bb$beta, a = 0.35, b = 0.65) +
ggtitle("Beta-Binomial Estimate of p", subtitle = "Geissler data, n=5") +
xlab("P(boy) in a single birth")
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
library(gbeta)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
source("../../scripts/beta-binomial.R")
geissler <- read.csv("../../data/geissler.csv")
g5 <- geissler %>%
filter(size == 5)
g5
g5_sum <- g5 %>%
summarize(
families = sum(freq),
children = sum(5 * freq),
boys = sum(boys*freq),
girls = sum(girls*freq),
p_boy = boys / children,
p_girl = girls / children,
sex_ratio = (boys/girls)*100
)
g5_sum
## Binomial Model
x5 <- g5 %>%
pull(freq)
p_hat <- sum(x5*(0:5)) / (5*sum(x5))
g5_binom <- sum(x5*dbinom(0:5,5,p_hat,log=TRUE))
g5_binom
## Beta Binomial Model
g5_bb <- mlebb(g5$freq)
g5_bb
G <- 2 * (g5_bb$logl - g5_binom)
G # Test Statistic
1 - pchisq(G,1) # p-value
gbeta(g5_bb$alpha, g5_bb$beta, a = 0.35, b = 0.65) +
ggtitle("Beta-Binomial Estimate of p", subtitle = "Geissler data, n=5") +
xlab("P(boy) in a single birth")
france<- read_csv("../../data/french-children.csv")
france
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls+1,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france_1 <- france %>%
summarize(families = )
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france_0 <- france %>%
filter(birth_order == 1)
france_0
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france_0 <- france %>%
filter(birth_order == 0)
france_0
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france_0 <- france %>%
filter(birth_order == 0) %>%
summarize(families = children,
boys = n_boys,
girls = n_girls,
children = boys + girls,
children_per_family = children / families)
france_0
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france
france_0 <- france %>%
filter(birth_order == 0) %>%
summarize(families = children,
boys = n_boys,
girls = n_girls,
children = boys + girls,
children_per_family = children / families)
france_0
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls+1,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls+1,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france_1 <- france %>%
filter(birth_order == 1)
france_1
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls+1,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france
france_1 <- france %>%
filter(birth_order == 1) %>%
summarize(fam)
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls+1,
children = count * 1000,
n_boys = round(children * p_boy),
n_girls = round(children * (1-p_boy))
)
france
france_1 <- france %>%
filter(birth_order == 1)
france_1
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls+1,
families = count * 1000,
n_boys = round(families * p_boy),
n_girls = round(families * (1-p_boy))
)
france
france_1 <- france %>%
filter(birth_order == 1)
france_1
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls+1,
families = count * 1000,
n_boys = round(families * p_boy),
n_girls = round(families * (1-p_boy))
)
france
france_1 <- france %>%
summarize(families=families,
boys = sum(n_boys),
girls = sum(n_girls),
children = boys + girls,
children_per_family = children/families)
france_1
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls+1,
families = count * 1000,
n_boys = round(families * p_boy),
n_girls = round(families * (1-p_boy))
)
france
france_1 <- france %>%
filter(birth_order == 1)
summarize(families=families,
boys = sum(n_boys),
girls = sum(n_girls),
children = boys + girls,
children_per_family = children/families)
france<- read_csv("../../data/french-children.csv")
france <- france %>%
mutate(birth_order = boys+girls+1,
families = count * 1000,
n_boys = round(families * p_boy),
n_girls = round(families * (1-p_boy))
)
france
france_1 <- france %>%
filter(birth_order == 1) %>%
summarize(families=families,
boys = sum(n_boys),
girls = sum(n_girls),
children = boys + girls,
children_per_family = children/families)
france_1
