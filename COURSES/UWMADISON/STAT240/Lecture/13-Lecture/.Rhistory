knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(modelr)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
causes <- read_csv("../../data/causes_of_death.csv") %>%
rename(age_adj_death_rate = `Age Adjusted Death Rate`)
causes <- read_csv("../../data/causes_of_death.csv") %>%
rename(age_adj_death_rate = `Age Adjusted Death Rate`)
causes %>%
count(Year)
causes %>%
count(Cause)
ggplot(causes, aes(x=Year, y=age_adj_death_rate, color=Cause)) +
geom_line(size = 2) +
ylab("Age-adjusted death rate") +
ggtitle("Major causes of death in the world",
subtitle = "1900 - 2015")
View(causes)
fram <- read_csv("../../data/framingham.csv")
fram
p_pop <- 0.0093
diabetes <- fram$DIABETES
n <- length(diabetes)
p_fram <- mean(diabetes)
p_fram
p_pop <- 0.0093
diabetes <- fram$DIABETES
n <- length(diabetes)
p_fram <- mean(diabetes)
p_fram
## Assuming the null is true, compute the test statistic:
se_p <- sqrt(p_pop*(1-p_pop)/n)
test_stat <- (p_fram - p_pop)/se_p
test_stat
## p-value assuming normality
pnorm(abs(test_stat), lower.tail=FALSE)*2
N <- 100000
x <- rbinom(N, n, p_pop)
df <- tibble(phat = x/n)
ggplot(df, aes(x=phat)) +
geom_density() +
geom_norm_density(mu=mean(x/n),sigma=sd(x/n), color="blue")
gbinom(n, p_pop, a = qbinom(.001,n,p_pop),b = qbinom(.999,n,p_pop))
x_fram <- sum(diabetes)  ## observed count
x_fram
np <- n*p_pop ## mean of X under null
np
x_fram - np ## distance between null mean and observed test statistic
pbinom(x_fram, n, p_pop, lower.tail = FALSE)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(modelr)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
x_sim <- rbinom(100000, n, p_pop)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(modelr)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
causes <- read_csv("../../data/causes_of_death.csv") %>%
rename(age_adj_death_rate = `Age Adjusted Death Rate`)
causes %>%
count(Year)
causes %>%
count(Cause)
ggplot(causes, aes(x=Year, y=age_adj_death_rate, color=Cause)) +
geom_line(size = 2) +
ylab("Age-adjusted death rate") +
ggtitle("Major causes of death in the world",
subtitle = "1900 - 2015")
fram <- read_csv("../../data/framingham.csv")
fram
p_pop <- 0.0093
diabetes <- fram$DIABETES
n <- length(diabetes)
p_fram <- mean(diabetes)
p_fram
## Assuming the null is true, compute the test statistic:
se_p <- sqrt(p_pop*(1-p_pop)/n)
test_stat <- (p_fram - p_pop)/se_p
test_stat
## p-value assuming normality
pnorm(abs(test_stat), lower.tail=FALSE)*2
N <- 100000
x <- rbinom(N, n, p_pop)
df <- tibble(phat = x/n)
ggplot(df, aes(x=phat)) +
geom_density() +
geom_norm_density(mu=mean(x/n),sigma=sd(x/n), color="blue")
gbinom(n, p_pop, a = qbinom(.001,n,p_pop),b = qbinom(.999,n,p_pop))
x_fram <- sum(diabetes)  ## observed count
x_fram
np <- n*p_pop ## mean of X under null
np
x_fram - np ## distance between null mean and observed test statistic
pbinom(x_fram, n, p_pop, lower.tail = FALSE)
x_sim <- rbinom(100000, n, p_pop)
sim_test_stat <- abs(x_sim/n - p_pop)
observed_test_stat <- abs(p_fram - p_pop)
observed_test_stat
x_sim
sim_test_stat
x_sim <- rbinom(100000, n, p_pop)
sim_test_stat <- abs(x_sim/n - p_pop)
observed_test_stat <- abs(p_fram - p_pop)
observed_test_stat
df_sim
df_sim <- tibble(stat = sim_test_stat)
ggplot(df_sim, aes(x=stat)) +
geom_histogram(boundary=0, color="black",fill="cyan") +
geom_vline(aes(xintercept=observed_test_stat), color="red",linetype="dashed")
df_sim
df_sim <- tibble(stat = sim_test_stat)
ggplot(df_sim, aes(x=stat)) +
geom_histogram(boundary=0, color="black",fill="cyan") +
geom_vline(aes(xintercept=observed_test_stat), color="red",linetype="dashed")
## Simulated p-value
mean(sim_test_stat>=observed_test_stat)
fram %>%
filter(ANYCHD == 0) %>%
pull(TOTCHOL)
chol0 <- fram %>%
filter(ANYCHD == 0) %>%
pull(TOTCHOL)
chol1 <- fram %>%
filter(ANYCHD == 1) %>%
pull(TOTCHOL)
mean(chol0)
mean0 <- mean(chol0)
sd0 <- sd(chol0)
n0 <- length(chol0)
c(mean0,sd0, n0)
mean0 <- mean(chol0)
sd0 <- sd(chol0)
n0 <- length(chol0)
c(mean0,sd0, n0)
mean1 <- mean(chol1)
sd1 <- sd(chol1)
n1 <- length(chol1)
c(mean1,sd1, n1)
se <- sqrt(sd0^2/n0+sd1^2/n1)
test_stat_chol <- (mean0-mean1)/se
test_stat_chol
t.test(chol0, chol1, alternative ="less") # ' < '
t.test(chol0, chol1, alternative ="less") # ' < '
dof <- 1545.8
pt(test_stat_chol, dof)
gt(df=dof) +
geom_vline(aes(xintercept = test_stat_chol), color="red", linetype="dashed") +
geom_t_fill(dof, b = test_stat_chol)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(modelr)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
causes <- read_csv("../../data/causes_of_death.csv") %>%
rename(age_adj_death_rate = `Age Adjusted Death Rate`)
causes %>%
count(Year)
causes %>%
count(Cause)
ggplot(causes, aes(x=Year, y=age_adj_death_rate, color=Cause)) +
geom_line(size = 2) +
ylab("Age-adjusted death rate") +
ggtitle("Major causes of death in the world",
subtitle = "1900 - 2015")
fram <- read_csv("../../data/framingham.csv")
fram
p_pop <- 0.0093
diabetes <- fram$DIABETES
n <- length(diabetes)
p_fram <- mean(diabetes)
p_fram
## Assuming the null is true, compute the test statistic:
se_p <- sqrt(p_pop*(1-p_pop)/n)
test_stat <- (p_fram - p_pop)/se_p
test_stat
## p-value assuming normality
pnorm(abs(test_stat), lower.tail=FALSE)*2
N <- 100000
x <- rbinom(N, n, p_pop)
df <- tibble(phat = x/n)
ggplot(df, aes(x=phat)) +
geom_density() +
geom_norm_density(mu=mean(x/n),sigma=sd(x/n), color="blue")
gbinom(n, p_pop, a = qbinom(.001,n,p_pop),b = qbinom(.999,n,p_pop))
x_fram <- sum(diabetes)  ## observed count
x_fram
np <- n*p_pop ## mean of X under null
np
x_fram - np ## distance between null mean and observed test statistic
pbinom(x_fram, n, p_pop, lower.tail = FALSE)
x_sim <- rbinom(100000, n, p_pop)
sim_test_stat <- abs(x_sim/n - p_pop)
observed_test_stat <- abs(p_fram - p_pop)
observed_test_stat
df_sim <- tibble(stat = sim_test_stat)
ggplot(df_sim, aes(x=stat)) +
geom_histogram(boundary=0, color="black",fill="cyan") +
geom_vline(aes(xintercept=observed_test_stat), color="red",linetype="dashed")
## Simulated p-value
mean(sim_test_stat>=observed_test_stat)
chol0 <- fram %>%
filter(ANYCHD == 0) %>%
pull(TOTCHOL)
chol1 <- fram %>%
filter(ANYCHD == 1) %>%
pull(TOTCHOL)
mean0 <- mean(chol0)
sd0 <- sd(chol0)
n0 <- length(chol0)
c(mean0,sd0, n0)
mean1 <- mean(chol1)
sd1 <- sd(chol1)
n1 <- length(chol1)
c(mean1,sd1, n1)
## Assuming the null is true
se <- sqrt(sd0^2/n0+sd1^2/n1)
test_stat_chol <- (mean0-mean1)/se
test_stat_chol
## Get degrees of freedom of t-distribution from t.test()
t.test(chol0, chol1, alternative ="less") # ' < '
dof <- 1545.8
pt(test_stat_chol, dof)
gt(df=dof) +
geom_vline(aes(xintercept = test_stat_chol), color="red", linetype="dashed") +
geom_t_fill(dof, b = test_stat_chol)
serum_cholesterol <- read_csv("../../data/serum_cholesterol.csv") %>%
rename(chol_change = `Change in Serum Cholesterol`)
serum_cholesterol
serum_cholesterol %>%
count(Condition)
ggplot(serum_cholesterol, aes(x=chol_change, fill=Condition)) +
geom_histogram(alpha=0.4, position="identity", color="black")
chol0 <- serum_cholesterol %>%
filter(Condition == "Control") %>%
pull(chol_change)
chol1 <- serum_cholesterol %>%
filter(Condition == "Diet") %>%
pull(chol_change)
chol0
chol0 <- serum_cholesterol %>%
filter(Condition == "Control") %>%
pull(chol_change)
chol1 <- serum_cholesterol %>%
filter(Condition == "Diet") %>%
pull(chol_change)
mean0 <- mean(chol0)
sd0 <- sd(chol0)
n0 <- length(chol0)
c(mean0,sd0, n0)
mean1 <- mean(chol1)
sd1 <- sd(chol1)
n1 <- length(chol1)
c(mean1,sd1, n1)
## Assuming the null is true
se <- sqrt(sd0^2/n0+sd1^2/n1)
test_stat_chol <- (mean0-mean1)/se
test_stat_chol
## Get degrees of freedom of t-distribution from t.test()
t.test(chol0, chol1,alternative ="greater")
dof <- 2316.5
pt(test_stat_chol, dof, lower.tail = FALSE)
gt(df=dof) +
geom_vline(aes(xintercept = test_stat_chol), color="red", linetype="dashed") +
geom_t_fill(dof, a = test_stat_chol)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(modelr)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
ggplot(serum_cholesterol, aes(x=chol_change, fill=Condition)) +
geom_histogram(alpha=0.4, position="identity", color="black")
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(modelr)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
causes <- read_csv("../../data/causes_of_death.csv") %>%
rename(age_adj_death_rate = `Age Adjusted Death Rate`)
causes %>%
count(Year)
causes %>%
count(Cause)
ggplot(causes, aes(x=Year, y=age_adj_death_rate, color=Cause)) +
geom_line(size = 2) +
ylab("Age-adjusted death rate") +
ggtitle("Major causes of death in the world",
subtitle = "1900 - 2015")
fram <- read_csv("../../data/framingham.csv")
fram
p_pop <- 0.0093
diabetes <- fram$DIABETES
n <- length(diabetes)
p_fram <- mean(diabetes)
p_fram
## Assuming the null is true, compute the test statistic:
se_p <- sqrt(p_pop*(1-p_pop)/n)
test_stat <- (p_fram - p_pop)/se_p
test_stat
## p-value assuming normality
pnorm(abs(test_stat), lower.tail=FALSE)*2
N <- 100000
x <- rbinom(N, n, p_pop)
df <- tibble(phat = x/n)
ggplot(df, aes(x=phat)) +
geom_density() +
geom_norm_density(mu=mean(x/n),sigma=sd(x/n), color="blue")
gbinom(n, p_pop, a = qbinom(.001,n,p_pop),b = qbinom(.999,n,p_pop))
x_fram <- sum(diabetes)  ## observed count
x_fram
np <- n*p_pop ## mean of X under null
np
x_fram - np ## distance between null mean and observed test statistic
pbinom(x_fram, n, p_pop, lower.tail = FALSE)
x_sim <- rbinom(100000, n, p_pop)
sim_test_stat <- abs(x_sim/n - p_pop)
observed_test_stat <- abs(p_fram - p_pop)
observed_test_stat
df_sim <- tibble(stat = sim_test_stat)
ggplot(df_sim, aes(x=stat)) +
geom_histogram(boundary=0, color="black",fill="cyan") +
geom_vline(aes(xintercept=observed_test_stat), color="red",linetype="dashed")
## Simulated p-value
mean(sim_test_stat>=observed_test_stat)
chol0 <- fram %>%
filter(ANYCHD == 0) %>%
pull(TOTCHOL)
chol1 <- fram %>%
filter(ANYCHD == 1) %>%
pull(TOTCHOL)
mean0 <- mean(chol0)
sd0 <- sd(chol0)
n0 <- length(chol0)
c(mean0,sd0, n0)
mean1 <- mean(chol1)
sd1 <- sd(chol1)
n1 <- length(chol1)
c(mean1,sd1, n1)
## Assuming the null is true
se <- sqrt(sd0^2/n0+sd1^2/n1)
test_stat_chol <- (mean0-mean1)/se
test_stat_chol
## Get degrees of freedom of t-distribution from t.test()
t.test(chol0, chol1, alternative ="less") # ' < '
dof <- 1545.8
pt(test_stat_chol, dof)
gt(df=dof) +
geom_vline(aes(xintercept = test_stat_chol), color="red", linetype="dashed") +
geom_t_fill(dof, b = test_stat_chol)
serum_cholesterol <- read_csv("../../data/serum_cholesterol.csv") %>%
rename(chol_change = `Change in Serum Cholesterol`)
serum_cholesterol
serum_cholesterol %>%
count(Condition)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(modelr)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
causes <- read_csv("../../data/causes_of_death.csv") %>%
rename(age_adj_death_rate = `Age Adjusted Death Rate`)
causes %>%
count(Year)
causes %>%
count(Cause)
ggplot(causes, aes(x=Year, y=age_adj_death_rate, color=Cause)) +
geom_line(size = 2) +
ylab("Age-adjusted death rate") +
ggtitle("Major causes of death in the world",
subtitle = "1900 - 2015")
fram <- read_csv("../../data/framingham.csv")
fram
p_pop <- 0.0093
diabetes <- fram$DIABETES
n <- length(diabetes)
p_fram <- mean(diabetes)
p_fram
## Assuming the null is true, compute the test statistic:
se_p <- sqrt(p_pop*(1-p_pop)/n)
test_stat <- (p_fram - p_pop)/se_p
test_stat
## p-value assuming normality
pnorm(abs(test_stat), lower.tail=FALSE)*2
N <- 100000
x <- rbinom(N, n, p_pop)
df <- tibble(phat = x/n)
ggplot(df, aes(x=phat)) +
geom_density() +
geom_norm_density(mu=mean(x/n),sigma=sd(x/n), color="blue")
gbinom(n, p_pop, a = qbinom(.001,n,p_pop),b = qbinom(.999,n,p_pop))
x_fram <- sum(diabetes)  ## observed count
x_fram
np <- n*p_pop ## mean of X under null
np
x_fram - np ## distance between null mean and observed test statistic
pbinom(x_fram, n, p_pop, lower.tail = FALSE)
x_sim <- rbinom(100000, n, p_pop)
sim_test_stat <- abs(x_sim/n - p_pop)
observed_test_stat <- abs(p_fram - p_pop)
observed_test_stat
df_sim <- tibble(stat = sim_test_stat)
ggplot(df_sim, aes(x=stat)) +
geom_histogram(boundary=0, color="black",fill="cyan") +
geom_vline(aes(xintercept=observed_test_stat), color="red",linetype="dashed")
## Simulated p-value
mean(sim_test_stat>=observed_test_stat)
chol0 <- fram %>%
filter(ANYCHD == 0) %>%
pull(TOTCHOL)
chol1 <- fram %>%
filter(ANYCHD == 1) %>%
pull(TOTCHOL)
mean0 <- mean(chol0)
sd0 <- sd(chol0)
n0 <- length(chol0)
c(mean0,sd0, n0)
mean1 <- mean(chol1)
sd1 <- sd(chol1)
n1 <- length(chol1)
c(mean1,sd1, n1)
## Assuming the null is true
se <- sqrt(sd0^2/n0+sd1^2/n1)
test_stat_chol <- (mean0-mean1)/se
test_stat_chol
## Get degrees of freedom of t-distribution from t.test()
t.test(chol0, chol1, alternative ="less") # ' < '
dof <- 1545.8
pt(test_stat_chol, dof)
gt(df=dof) +
geom_vline(aes(xintercept = test_stat_chol), color="red", linetype="dashed") +
geom_t_fill(dof, b = test_stat_chol)
serum_cholesterol <- read_csv("../../data/serum_cholesterol.csv") %>%
rename(chol_change = `Change in Serum Cholesterol`)
serum_cholesterol
serum_cholesterol %>%
count(Condition)
