library(tidyverse)
grid <- seq(-5, 5, length.out=1000) # create a grid
y1 <- dnorm(grid, mean=0, sd = 1) # density curve of a normal distribution with mean=0, stand. dev.=1
y2 <- dnorm(grid, mean=0, sd = 3) # density curve of a normal distribution with mean=0, stand. dev.=3
y3 <- dnorm(grid, mean=1, sd = .5) # density curve of a normal distribution with mean=1, stand. dev.=.5
normal <- tibble(grid=grid, y1=y1, y2=y2, y3=y3) # combine data into a tibble
colors <- c("(0,1)" = "blue", "(0,3)" = "red", "(1,.5)" = "cyan") # set color assignments
ggplot(normal, aes(x=grid)) +
geom_line(aes(y=y1,color="(0,1)"), size=2) +
geom_line(aes(y=y2,color="(0,3)"), size=2) +
geom_line(aes(y=y3,color="(1,.5)"), size=2) +
labs(title = "Normal density curves",
x = "Grid",
y = "Density",
color = "(mean, sd)") +
scale_color_manual(values = colors)
set.seed(246) # Setting our random seed so the dataset always comes out the same
n <- 50 # set our sample size
x <- runif(n, 0, 10) # explanatory variable
sigma <- 2 # standard deviation of error
error <- rnorm(n, 0, sigma) # error
beta0 <- 2 # intercept
beta1 <- -3 # slope
y <- beta0 + beta1*x + error # generate our response variable y
dset <- tibble(x=x,y=y) # create our data frame for analysis
str(dset)
ggplot(dset, aes(x,y)) +
geom_point() +
ylab("y") +
xlab("x") +
ggtitle("Simulated data")
lm1 <- lm(y~x, dset)
coefficients(lm1)
fitted(lm1)
summary(lm1)
dset2 <- dset %>%
mutate(fit = fitted(lm1))
dset2 <- dset %>%
mutate(fit = fitted(lm1)) # Add a column to our data frame with the fitted values)
ggplot(dset2, aes(x=x,y=y)) +
geom_point() +
geom_line(aes(y=fit),color="red", size = 1) +  # our fit model
geom_smooth(se=FALSE,method="lm",color="cyan",size=1) +  # this fits the same line as our model!
ylab("y") +
xlab("x") +
ggtitle("Linear model fit")
residuals1 <- residuals(lm1)
dset2 <- dset2 %>%
mutate(residuals = residuals1) # Add a column to our data frame with the fitted values)
ggplot(dset2, aes(x=x,y=y)) +
geom_point() +
geom_line(aes(y=fit),color="red") +
geom_segment(aes(xend=x, yend=fit), color="cyan") +  # draws segments between (x,y) and (xend,yend)
ylab("y") +
xlab("x") +
ggtitle("Linear model fit plus residuals")
library(tidyverse)
library(lubridate)
mendota <- read_csv("lake-mendota-clean-2020.csv")
mendota <- read_csv("lake-mendota-clean-2020.csv")
mendota
mendota
View(mendota)
spec(mendota)
ggplot(data = mendota, mapping = aes(x=year1,y=days))
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point()
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line()
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line() +
## add a smooth trend line
geom_smooth(se=FALSE)
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line() +
## add a smooth trend line
geom_smooth(se=FALSE) +
## change the label on the x axis
xlab("Year")
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line() +
## add a smooth trend line
geom_smooth(se=FALSE) +
## change the label on the x axis
xlab("Year") +
## change the label on the y axis
ylab("Total Days Frozen")
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line() +
## add a smooth trend line
geom_smooth(se=FALSE) +
## change the label on the x axis
xlab("Year") +
## change the label on the y axis
ylab("Total Days Frozen") +
## add a title
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days))
ggplot(mendota, aes(x=days)) +
geom_histogram()
?geom_histogram()
ggplot(mendota, aes(x=days)) +
geom_histogram(center=70,binwidth=7,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days)) +
geom_histogram(center=70,binwidth=10,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days)) +
geom_histogram(center=70,binwidth=15,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days)) +
geom_histogram(center=70,binwidth=7,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days)) +
geom_histogram(center=50,binwidth=7,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days)) +
geom_histogram(center=70,binwidth=7,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days)) +
geom_histogram(center=70,binwidth=60,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days)) +
geom_histogram(center=70,binwidth=1,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota) +
geom_density(aes(x=days),
fill="hotpink",
color="black") +
# stat_density(aes(x=days),adjust = 3, color="black", fill="cyan",alpha=.2) +
xlab("Total days frozen") +
ylab("") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota) +
geom_density(aes(x=days),
fill="hotpink",
color="black") +
stat_density(aes(x=days),adjust = 3, color="black", fill="cyan",alpha=.2) +
xlab("Total days frozen") +
ylab("") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota) +
geom_density(aes(x=days),
fill="hotpink",
color="black") +
stat_density(aes(x=days),adjust = .2, color="black", fill="cyan",alpha=.2) +
xlab("Total days frozen") +
ylab("") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota) +
geom_density(aes(x=days),
fill="hotpink",
color="black") +
stat_density(aes(x=days),adjust = 3, color="black", fill="cyan",alpha=.2) +
xlab("Total days frozen") +
ylab("") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota) +
geom_density(aes(x=days),
fill="hotpink",
color="black") +
# stat_density(aes(x=days),adjust = 3, color="black", fill="cyan",alpha=.2) +
xlab("Total days frozen") +
ylab("") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota) +
geom_boxplot(aes(x=as.character(decade),y=days),
fill="yellow",
color="black") +
ylab("Total days frozen") +
xlab("Decade") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
spec(mendota)
str(mendota)
type(mednota)
```{r q1}
## first argument to ggplot is a data frame
## the second argument is a mapping of the aesthetics
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line() +
## add a smooth trend line
geom_smooth(se=FALSE) +
## change the label on the x axis
xlab("Year") +
## change the label on the y axis
ylab("Total Days Frozen") +
## add a title
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
```
type(mendota)
```{r q1}
## first argument to ggplot is a data frame
## the second argument is a mapping of the aesthetics
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line() +
## add a smooth trend line
geom_smooth(se=FALSE) +
## change the label on the x axis
xlab("Year") +
## change the label on the y axis
ylab("Total Days Frozen") +
## add a title
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
```
type(mendota)
ggplot(data = mendota, mapping = aes(x=year1,y=days))
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point()
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line()
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line() +
## add a smooth trend line
geom_smooth(se=FALSE)
ggplot(data = mendota, mapping = aes(x=year1,y=days)) +
## add points to the plot with the x and y aesthetics
geom_point() +
## draw lines between consecutive points
geom_line() +
## add a smooth trend line
geom_smooth(se=FALSE) +
## change the label on the x axis
xlab("Year") +
## change the label on the y axis
ylab("Total Days Frozen") +
## add a title
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days)) +
geom_histogram()
ggplot(mendota, aes(x=days)) +
geom_histogram(center=70,binwidth=7,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=days)) +
geom_histogram(center=70,binwidth=60,fill='hotpink',color='black') +
xlab("Total Days Frozen") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
mendota <- read_csv("lake-mendota-clean-2020.csv")
mendota2 = mendota %>%
select(winter,year1,days) %>% # select the variables
drop_na() # drop rows that having values missing
dim(mendota) # dimension of original data frame
dim(mendota2) # dimension of new data frame
fit1 <- lm(days ~ 1, data=mendota2) # no trend model
fit2 <- lm(days ~ year1, data=mendota2) # linear model
fit3 <- loess(days ~ year1, data=mendota2) # local linear model
r1 <- residuals(fit1)
r2 <- residuals(fit2)
r3 <- residuals(fit3)
mendota3 <- mendota2 %>%
mutate(fit1 = fitted(fit1), # Add a column to our data frame with the fitted values and residuals
residuals1 = r1,
fit2 = fitted(fit2),
residuals2 = r2,
fit3 = fitted(fit3),
residuals3 = r3)
View(mendota3)
ggplot(mendota3) +
geom_line(aes(x=year1,y=days)) + # plots data as line
geom_point(aes(x=year1,y=days)) + # plots data as points
geom_line(aes(x=year1,y=fit1), color="red") + # plots fitted model as a line in red
ylab("Total days frozen") + # add y-axis label
xlab("Year") + # add x-axis label
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "No Effect Model Fit") # add title and subtitle
ggplot(mendota3) +
geom_point(aes(x=year1,y=residuals1)) +
geom_hline(yintercept=0) + # plots horizontal line at `yintercept=0`
ylab("Total days frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "No Effect Model Residuals")
ggplot(mendota3) +
geom_histogram(aes(x=residuals1), boundary=0, binwidth=7, # plots a histogram of the residuals
color="black", fill = "blue")
ggplot(mendota3, aes(x=year1,y=days)) +
geom_line() +
geom_point() +
geom_smooth(se=FALSE,method="lm",color="cyan",size=3) + # this fits the same line as model 2
geom_line(aes(x=year1,y=fit2), color="red", size=2) + # plots fitted model as a line in red
ylab("Total days frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "Linear Model Fit")
ggplot(mendota3) +
geom_point(aes(x=year1,y=residuals2)) +
geom_hline(yintercept=0) +
ylab("Total days frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "Linear Model Residuals")
ggplot(mendota3) +
geom_histogram(aes(x=residuals2), boundary=0, binwidth=7,
color="black", fill = "blue")
ggplot(mendota3, aes(x=year1,y=days)) +
geom_line() +
geom_point() +
geom_smooth(se=FALSE, color="cyan",size=3) + # this fits the same line as model 3
geom_line(aes(x=year1,y=fit3), color="red", size=2) + # plots fitted model as a line in red
ylab("Total days frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "Loess Model Fit")
ggplot(mendota3) +
geom_point(aes(x=year1,y=residuals3)) +
geom_hline(yintercept=0) +
ylab("Total days frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "Loess Model Residuals")
ggplot(mendota3) +
geom_histogram(aes(x=residuals3), boundary=0, binwidth=7,
color="black", fill = "blue")
library(tidyverse)
library(lubridate)
mendota <- read_csv("lake-mendota-clean-2020.csv")
mendota
mendota2 = mendota %>%
select(winter, year1, days) %>%
drop_na()
dim(mendota)
dim(mendota2)
fit1 <- lm(days ~ 1, data = mendota2)
fit2 <- lm(days ~ year1, data = mendota2)
fit3 <- loess(days ~ year1, data = mendota2)
r1 <- residuals(fit1)
r2 <- residuals(fit2)
r3 <- reisduals(fit3)
r3 <- residuals(fit3)
mendota3 <- mendota2 %>%
mutate(fit1 = fitted(fit1)),
residuals1 = r1, fit2 = fitted(fit2), residuals2 = r2,
fit3 = fitted(fit3), residuals3 = r3
mendota3 <- mendota2 %>%
mutate(fit1 = fitted(fit1),
residuals1 = r1, fit2 = fitted(fit2), residuals2 = r2,
fit3 = fitted(fit3), residuals3 = r3)
ggplot(mendota3)
ggplot(mendota3)
View(mendota3)
ggplot(mendota3) +
geom_line(aes(x=year1, y=days)) +
geom_point(aes(x=year1, y=days)) +
geom_line(aes(x=year1, y=fit1), color="red") +
ylab("Total days frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "No Effect Model Fit")
ggplot(mendota3) +
geom_point(aes(x=year1, y=residuals1)) +
geom_hline(yintercept=0) +
ylab("Total days frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "No Effect Model Residuals")
ggplot(mendota3) +
geom_histogram(aes(x=residuals1), boundary=0, bindwidth=7, color = "black", fill="blue")
ggplot(mendota3) +
geom_histogram(aes(x=residuals1), boundary=0, binwidth=7, color = "black", fill="blue")
ggplot(mendota3, aes(x=year1, y=days)) +
geom_line() +
geom_point() +
geom_smooth(se=FALSE, method="lm", color="cyan",size=3) +
geom_line(aes(x=year1, y=fit2), color="red", size=2) +
ylab("Total days frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "Linear Model Fit")
ggplot(mendota3) +
geom_point(aes(x=year1, y=residuals2)) +
geom_hline(yintercept=0) +
ylab("Total days frozen") +
xlab("Year")
ggplot(mendota3) +
geom_histogram(aes(x=residuals2), boundary=0, binwidth=7, color="black", fill="blue")
ggplot(mendota3, aes(x=year1, y=days)) +
geom_line() +
geom_point() +
geom_smooth(se=FALSE, color="cyan", size=3) +
geom_line(aes(X=year1, y=fit3), color="red", size=2) +
ggplot(mendota3, aes(x=year1, y=days)) +
geom_line() +
geom_point() +
geom_smooth(se=FALSE, color="cyan", size=3) +
geom_line(aes(X=year1, y=fit3), color="red", size=2)
ggplot(mendota3, aes(x=year1, y=days)) +
geom_line() +
geom_point() +
geom_smooth(se=FALSE, color="cyan", size=3) +
geom_line(aes(X=year1, y=fit3), color="red", size=2) +
ylab("Total days frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020",
subtitle = "Loess Model Fit")
ggplot(mendota3) +
geom_point(aes(x=year1, y=residuals3)) +
geom_hline(yintercept=0) +
ylab("Total Days Frozen") +
xlab("Year") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota3) +
geom_histogram(aes(x=residuals3), boundary=0, binwidth=7,
color="black", fill = "blue")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
mendota <- read_csv("lake-mendota-clean-2020.csv")
View(mendota)
paste0(mendota$year1, "-10-31")
mendota$first_freeze - paste0(mendota$year1, "-10-31")
mendota$first_freeze - as_date(paste0(mendota$year1, "-10-31"))
mendota$first_freeze[1] - as_date(paste0(mendota$year1, "-10-31"))
mendota <- mendota %>%
mutate(oct31=as_date(paste0(year1,"-10-31"))) #Add variable oct31 as a date
m = with(mendota, median(first_freeze-oct31, na.rm=TRUE))
m
as_date("2020-10-31")+m
mendota <- mendota %>%
mutate(oct31=as_date(paste0(year1,"-10-31"))) #Add variable oct31 as a date
m = with(mendota, median(first_freeze-oct31, na.rm=TRUE))
m
#as_date("2020-10-31")+m
mendota = mendota %>%  # Start with our data set, then
mutate(first_freeze_median = oct31 + m) %>%  # add this new variable, then
mutate(first_freeze_residual = first_freeze - first_freeze_median)  # add this new variable
ggplot(mendota, aes(x=first_freeze_residual)) +
geom_density(color="black",fill="purple") +
xlab("Days (first freeze date - median first freeze date)") +
ylab("") +
ggtitle("Lake Mendota Freeze Durations, 1855-2020")
ggplot(mendota, aes(x=year1,y=first_freeze_residual)) +
geom_point() +
geom_smooth(method="lm",se=FALSE) + # linear model trend line
geom_smooth(se=FALSE,color="red")
ggplot(mendota, aes(x=year1,y=first_freeze_residual)) +
geom_point() +
geom_smooth(method="lm",se=FALSE) + # linear model trend line
geom_smooth(se=FALSE,color="red") + # add a smooth trend
geom_segment(aes(xend=year1, yend=0), color="lightgray")
ggplot(mendota, aes(x=year1,y=first_freeze_residual)) +
geom_point() +
geom_smooth(method="lm",se=FALSE) + # linear model trend line
geom_smooth(se=FALSE,color="red") + # add a smooth trend
geom_segment(aes(xend=year1, yend=0), color="lightgray") + # draws segments between (x,y) and (xend,yend)
geom_hline(yintercept = 0, color="gray", linetype="dashed")
ggplot(mendota, aes(x=year1,y=first_freeze_residual)) +
geom_point() +
geom_smooth(method="lm",se=FALSE) + # linear model trend line
geom_smooth(se=FALSE,color="red") + # add a smooth trend
geom_segment(aes(xend=year1, yend=0), color="lightgray") + # draws segments between (x,y) and (xend,yend)
geom_hline(yintercept = 0, color="gray", linetype="dashed") + # adds a horizontal line at yintercept
scale_y_continuous(breaks = seq(-21,42,by=7),
labels = c("Nov 29","Dec 6","Dec 13","Dec 20","Dec 27","Jan 3","Jan 10","Jan 17","Jan 24","Jan 31")) +
xlab("Year") +
ylab(paste0("Days after ", format(mendota$first_freeze_median[1], format="%B %d"))) +
ggtitle(paste0("First freeze date days after ", format(mendota$first_freeze_median[1], format="%B %d"))) +
theme_bw() # adjusts the plot colors (e.g., changes background)
