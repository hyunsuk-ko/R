mutate(beth = cumsum(str_count(text,"Beth"))) %>%
mutate(jo = cumsum(str_count(text,"Jo"))) %>%
mutate(laurie = cumsum(str_count(text,"Laurie"))) %>%
mutate(meg = cumsum(str_count(text,"Meg")))
chapters_long <- chapters %>%
pivot_longer(cols=amy:meg, names_to="character",values_to="count")
View(chapters_long)
ggplot(chapters_long, aes(x=number,y=count,color=character)) +
geom_line(size=2)+
xlab("Chapter number") +
ylab("Cumulative count")+
labs(color="Character")
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree in a `scripts` folder
source("../../scripts/viridis.R")
police_orig <- read_csv("../../data/Police_Incident_Reports_2020-09-28.csv")
head(police_orig)
str(police_orig)
police_orig <- police_orig %>%
mutate(IncidentDate = as_datetime(IncidentDate)) %>% # Format as_datetime
mutate(DateModified = as_datetime(DateModified))
View(police_orig)
head(police_orig) # POSIXct = date-time
str(police_orig)
```{r distinct-id}
police_orig %>%
nrow()
police_orig %>%
select(IncidentID) %>%
distinct() %>%
nrow()
police_orig %>%
select(IncidentID) %>%
distinct()
police_orig %>%
count(IncidentType)
police_orig %>%
count(IncidentType) %>%
arrange(desc(n))
police_orig %>%
count(IncidentType) %>%
arrange(desc(n)) %>%
print(10)
police_orig %>%
count(IncidentType) %>%
slice_max(order_by=n,n=10)
police_orig %>%
count(IncidentType) %>%
slice_min(order_by=n,n=10)
police_orig %>%
mutate(case_match =
# str_detect(CaseNumber,"^[0-9]+-[0-9]?$")) %>%  # Matches one+ digits - zero or one digits
str_detect(CaseNumber,"^[0-9]+-[0-9]{0,1}$")) %>%
filter(case_match)
police_orig %>%
summarize(min = min(IncidentDate),
max = max(IncidentDate))
police_orig %>%
slice_max(n=10, order_by=IncidentDate)
police_orig %>%
slice_min(n=10,order_by=IncidentDate)
date_temp <- police_orig$IncidentDate[1]
date_temp
date_temp <- police_orig$IncidentDate[1]
date_temp
date_temp - now()
ggplot(police_orig, aes(x=IncidentDate-now(),y=as.numeric(IncidentID))) +
geom_point()
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree in a `scripts` folder
source("../../scripts/viridis.R")
police_orig <- read_csv("../../data/Police_Incident_Reports_2020-09-28.csv")
head(police_orig)
str(police_orig)
# Need to format the date variables
police_orig <- police_orig %>%
mutate(IncidentDate = as_datetime(IncidentDate)) %>% # Format as_datetime
mutate(DateModified = as_datetime(DateModified))
head(police_orig) # POSIXct = date-time
str(police_orig)
police_orig %>%
nrow()
police_orig %>%
select(IncidentID) %>%
distinct() %>%
nrow()
police_orig %>%
count(IncidentType) %>%
arrange(desc(n)) %>%
print(10)
police_orig %>%
count(IncidentType) %>%
slice_max(order_by=n,n=10)
police_orig %>%
count(IncidentType) %>%
slice_min(order_by=n,n=10)
police_orig %>%
mutate(case_match =
# str_detect(CaseNumber,"^[0-9]+-[0-9]?$")) %>%  # Matches one+ digits - zero or one digits
str_detect(CaseNumber,"^[0-9]+-[0-9]{0,1}$")) %>%
filter(case_match)
police_orig %>%
mutate(case_match =
# str_detect(CaseNumber,"^[0-9]+-[0-9]+$")) %>%  # Matches one+ digits - one+ digits
# str_detect(CaseNumber,"^[0-9]{4}-[0-9]+$")) %>%  # Matches four digits - one+ digits
str_detect(CaseNumber,"^[0-9]{4}-[0-9]{5,6}$")) %>% # Matches four digits - five-six digits
# str_detect(CaseNumber,"^[0-9]{4}-[0-9]{6}$")) %>% # Matches four digits - six digits
filter(!case_match) %>%
select(IncidentID,CaseNumber,IncidentDate)
# Look at date range
police_orig %>%
summarize(min = min(IncidentDate),
max = max(IncidentDate))
police_orig %>%
slice_max(n=10, order_by=IncidentDate)
police_orig %>%
slice_min(n=10,order_by=IncidentDate)
date_temp <- police_orig$IncidentDate[1]
date_temp
date_temp - now()
## See if IncidentID is chronological
ggplot(police_orig, aes(x=IncidentDate-now(),y=as.numeric(IncidentID))) +
geom_point()
bad_date <- police_orig %>%
filter(IncidentDate > now() | # dates in the future
str_sub(CaseNumber,1,4) != year(IncidentDate)) %>% # first part of case number does not match incident date
select(IncidentID,CaseNumber,IncidentDate,DateModified)
bad_date
police_orig %>%
mutate(CaseNumber = case_when(
str_detect(CaseNumber,"^0[0-9]-") ~ str_c("20",CaseNumber),
str_detect(CaseNumber,"^[0-9]{2}-") ~ str_c(year(IncidentDate),str_sub(CaseNumber,3,-1)),
str_detect(CaseNumber,"^[0-9]{3}-") ~ str_c(year(IncidentDate),str_sub(CaseNumber,4,-1)),
str_detect(str_to_lower(CaseNumber),"none") ~ as.character(NA),
TRUE ~ CaseNumber))
police <- police_orig %>%
mutate(CaseNumber = case_when(
str_detect(CaseNumber,"^0[0-9]-") ~ str_c("20",CaseNumber),
str_detect(CaseNumber,"^[0-9]{2}-") ~ str_c(year(IncidentDate),str_sub(CaseNumber,3,-1)),
str_detect(CaseNumber,"^[0-9]{3}-") ~ str_c(year(IncidentDate),str_sub(CaseNumber,4,-1)),
str_detect(str_to_lower(CaseNumber),"none") ~ as.character(NA),
TRUE ~ CaseNumber)) %>%
mutate(CaseNumber = case_when(str_detect(CaseNumber,"-0+$") ~ as.character(NA),
TRUE ~ CaseNumber))
police %>%
filter(IncidentDate > now() |
str_sub(CaseNumber,1,4) != year(IncidentDate)) %>%
select(IncidentID,CaseNumber,IncidentDate,DateModified)
police %>%
slice_max(n=1, IncidentDate) #This IncidentDate likely could get corrected to 2017
week <- police %>%
select(IncidentID, IncidentType, IncidentDate) %>%
mutate(wday = wday(IncidentDate, label = TRUE, abbr = TRUE),
month = month(IncidentDate, label = TRUE, abbr = TRUE))
week
week %>%
count(wday)%>%
ggplot(aes(wday,y=n)) +
geom_col()
week %>%
count(month)%>%
ggplot(aes(month,y=n)) +
geom_col()
week %>%
select(IncidentType) %>%
filter(str_detect(IncidentType,"(?i)traffic|drive|accident")) %>%
distinct()
week %>%
filter(str_detect(IncidentType,"(?i)traffic|drive|accident")) %>%
count(wday)
week %>%
filter(str_detect(IncidentType,"(?i)traffic|drive|accident")) %>%
count(wday)%>%
ggplot(aes(wday,y=n)) +
geom_col()
week %>%
filter(str_detect(IncidentType,"(?i)traffic|drive|accident")) %>%
count(month)%>%
ggplot(aes(month,y=n)) +
geom_col()
string1 <- "a\nbc"
string2 <- "a\nbbc"
string3 <- "a\n.bc"
string4 <- "a\n\nbc"
string1
string2
string3
string4
dot <- "\\."
dot
writeLines(dot)
str_view(c("abc", "a.c", "bef"), "a\\.c")
library(tidyverse)
str_view(c("abc", "a.c", "bef"), "a\\.c")
writeLines("a\\.c")
x <- "a\\b"
writeLines(x)
str_view(x, "\\\\")
# <Anchors>
#  By default, regular expressions will match any part of a string. It's often useful to anchor the regular expression so that it matches from the start or end of the string. You can use:
# ^ to match the start of the string.
# $ to match the end of the string.
x <- c("apple", "banana", "pear")
str_view(x, "^a")
str_view(x, "a$")
# begin with power(^) and end up with money($)
x <- c("apple pie", "apple", "apple cake")
str_view(x, "apple")
str_view(x, "^apple$")
# Remember, to create a regular expression cotnaining \d or \s, you'll need to escape the \ for the string, so you'll type "\\d" or "\\s".
str_view(c("abc", "a.c", "a*c", "a c"), "a[.]c")
str_view(c("abc", "a.c", "a*c", "a c"), ".[*]c")
str_view(c(string1, string2, string3, string4), ".b.")
str_view(c("abbcc", "abbbc", "abaa", "abcabcabc"), "(.)\\1\\1")
str_view(c("Hello, my name is Jessi.", "Wow!%^&!!!", "6+2=8", "^.*$", "Go Badgers!"), "^.*$")
str_view(x, "apple")
x <- c("apple", "banana", "pear")
str_view(x, "^a")
str_view(x, "a$")
# begin with power(^) and end up with money($)
x <- c("apple pie", "apple", "apple cake")
str_view(x, "apple")
str_view(x, "^apple$")
x <- c("apple pie", "apple", "apple cake")
str_view(x, "apple")
str_view(x, "^apple$")
str_detect(c("W", "WW", "WWW", "WWWW"), ^W.$)
str_detect(c("W", "WW", "WWW", "WWWW"), "^W.$")
str_detect(c("W", "WW", "WWW", "WWWW"), "^W.* ")
str_detect(c("W", "WW", "WWW", "WWWW"), "^[^W]*$ ")
str_detect(c("W", "WW", "WWW", "WWWW"), "^W+$ ")
str_detect(c("W", "WW", "WWW", "WWWW", "abc"), "^W+$ ")
str_detect(c("W", "WW", "WWW", "WWWW", "abc"), "^[^W]*$ ")
str_detect(c("W", "WW", "WWW", "WWWW", "abc"), "^W.* ")
str_detect(c("W", "WW", "WWW", "WWWW", "abc"), "^W.$ ")
str_detect(c("W", "WW", "WWW", "WWWW", "abc"), "^W.$")
str_detect(c("W", "WW", "WWW", "WWWW", "abc"), "^W.*")
str_detect(c("W", "WW", "WWW", "WWWW", "abc"), "^[^W]*$")
str_detect(c("W", "WW", "WWW", "WWWW", "abc", "Wabc"), "^[^W]*$")
str_detect(c("W", "WW", "WWW", "WWWW", "abc", "Wabc"), "^W+$")
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning=FALSE,cache=TRUE,autodep=TRUE,cache.comments=FALSE)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree in a `scripts` folder
source("../../scripts/viridis.R")
police_orig <- read_csv("../../data/Police_Incident_Reports_2020-09-28.csv")
head(police_orig)
str(police_orig)
# Need to format the date variables
police_orig <- police_orig %>%
mutate(IncidentDate = as_datetime(IncidentDate)) %>% # Format as_datetime
mutate(DateModified = as_datetime(DateModified))
head(police_orig) # POSIXct = date-time
str(police_orig)
police_orig %>%
nrow()
police_orig %>%
select(IncidentID) %>%
distinct() %>%
nrow()
police_orig %>%
count(IncidentType) %>%
arrange(desc(n)) %>%
print(10)
police_orig %>%
count(IncidentType) %>%
slice_max(order_by=n,n=10)
police_orig %>%
count(IncidentType) %>%
slice_min(order_by=n,n=10)
police_orig %>%
mutate(case_match =
# str_detect(CaseNumber,"^[0-9]+-[0-9]?$")) %>%  # Matches one+ digits - zero or one digits
str_detect(CaseNumber,"^[0-9]+-[0-9]{0,1}$")) %>%
filter(case_match)
police_orig %>%
mutate(case_match =
# str_detect(CaseNumber,"^[0-9]+-[0-9]+$")) %>%  # Matches one+ digits - one+ digits
# str_detect(CaseNumber,"^[0-9]{4}-[0-9]+$")) %>%  # Matches four digits - one+ digits
str_detect(CaseNumber,"^[0-9]{4}-[0-9]{5,6}$")) %>% # Matches four digits - five-six digits
# str_detect(CaseNumber,"^[0-9]{4}-[0-9]{6}$")) %>% # Matches four digits - six digits
filter(!case_match) %>%
select(IncidentID,CaseNumber,IncidentDate)
# Look at date range
police_orig %>%
summarize(min = min(IncidentDate),
max = max(IncidentDate))
police_orig %>%
slice_max(n=10, order_by=IncidentDate)
police_orig %>%
slice_min(n=10,order_by=IncidentDate)
date_temp <- police_orig$IncidentDate[1]
date_temp
date_temp - now()
## See if IncidentID is chronological
ggplot(police_orig, aes(x=IncidentDate-now(),y=as.numeric(IncidentID))) +
geom_point()
## There are some clear outliers where the IncidentDate appears to be wrong.
bad_date <- police_orig %>%
filter(IncidentDate > now() | # dates in the future
str_sub(CaseNumber,1,4) != year(IncidentDate)) %>% # first part of case number does not match incident date
select(IncidentID,CaseNumber,IncidentDate,DateModified)
bad_date
## Change all CaseNumbers which begin 0X- to 200X-
## Change CaseNumbers which begin with two or three digits and then a dash
##   to match the year of the date before the dash
## Turn "none"'s into NAs
## Turn CaseNumbers that have only zeros after the - into NAs
police <- police_orig %>%
mutate(CaseNumber = case_when(
str_detect(CaseNumber,"^0[0-9]-") ~ str_c("20",CaseNumber),
str_detect(CaseNumber,"^[0-9]{2}-") ~ str_c(year(IncidentDate),str_sub(CaseNumber,3,-1)),
str_detect(CaseNumber,"^[0-9]{3}-") ~ str_c(year(IncidentDate),str_sub(CaseNumber,4,-1)),
str_detect(str_to_lower(CaseNumber),"none") ~ as.character(NA),
TRUE ~ CaseNumber)) %>%
mutate(CaseNumber = case_when(str_detect(CaseNumber,"-0+$") ~ as.character(NA),
TRUE ~ CaseNumber))
police %>%
filter(IncidentDate > now() |
str_sub(CaseNumber,1,4) != year(IncidentDate)) %>%
select(IncidentID,CaseNumber,IncidentDate,DateModified)
## Still issues remaining; would want to ask if year in IncidentDate is more
## reliable than the first four digits of the CaseNumber
## If so, we could fix many of these issues
police %>%
slice_max(n=1, IncidentDate) #This IncidentDate likely could get corrected to 2017
week <- police %>%
select(IncidentID, IncidentType, IncidentDate) %>%
mutate(wday = wday(IncidentDate, label = TRUE, abbr = TRUE),
month = month(IncidentDate, label = TRUE, abbr = TRUE))
week %>%
count(wday)%>%
ggplot(aes(wday,y=n)) +
geom_col()
week %>%
count(month)%>%
ggplot(aes(month,y=n)) +
geom_col()
week %>%
select(IncidentType) %>%
filter(str_detect(IncidentType,"(?i)traffic|drive|accident")) %>%
distinct()
week %>%
filter(str_detect(IncidentType,"(?i)traffic|drive|accident")) %>%
count(wday)%>%
ggplot(aes(wday,y=n)) +
geom_col()
week %>%
filter(str_detect(IncidentType,"(?i)traffic|drive|accident")) %>%
count(month)%>%
ggplot(aes(month,y=n)) +
geom_col()
it <- police %>%
select(IncidentID, IncidentType, IncidentDate) %>%
mutate(hour = hour(IncidentDate),
time = case_when(
hour < 1 ~ "late evening",
hour < 5 ~ "overnight",
hour < 9 ~ "early morning",
hour < 13 ~ "morning",
hour < 17 ~ "afternoon",
hour < 21 ~ "evening",
TRUE ~ "late evening"))
## Which time has the most incidents
it %>%
count(time) %>%
arrange(desc(n))
ggplot(it, aes(x=time)) +
geom_bar() +
xlab("Incident Type") +
ylab("Count") +
ggtitle("Madison Crime Data")
## The barplot is helpful...but the order is a bit difficult to follow
### how the number of incident change across the day
## Let's reorder the time variable
it2 <- it %>%
mutate(time_order = case_when(
hour < 1 ~ 6,
hour < 5 ~ 1,
hour < 9 ~ 2,
hour < 13 ~ 3,
hour < 17 ~ 4,
hour < 21 ~ 5,
TRUE ~ 6),
time = reorder(time, time_order))
str(it2)
ggplot(it2, aes(x=time)) +
geom_bar() +
xlab("Incident Type") +
ylab("Count") +
ggtitle("Madison Crime Data")
it %>%
group_by(IncidentType) %>%
summarize(n = n()) %>%
arrange(desc(n))
## other types of robbery?
it %>%
select(IncidentType) %>%
filter(str_detect(IncidentType, "(?i)robbery")) %>%
distinct()
## other types of traffic issues?
it %>%
select(IncidentType) %>%
filter(str_detect(IncidentType,"(?i)traffic|drive|accident")) %>%
distinct()
## other types of burglaries?
it %>%
select(IncidentType) %>%
filter(str_detect(IncidentType,"(?i)burglar")) %>%
distinct()
## other types of animals?
it %>%
select(IncidentType) %>%
filter(str_detect(IncidentType,"(?i)animal")) %>%
distinct()
it3 <- it2 %>%
mutate(incident_group =
case_when(
str_detect(IncidentType,"(?i)Robbery") ~ "robbery",
str_detect(IncidentType,"(?i)Weapons") ~ "weapons",
str_detect(IncidentType,"(?i)Battery") ~ "battery",
str_detect(IncidentType,"(?i)Theft") ~ "theft",
str_detect(IncidentType,"(?i)traffic|drive|accident") ~ "traffic",
str_detect(IncidentType,"(?i)burglary") ~ "burglary",
TRUE ~ "other"
))
it3 %>%
group_by(incident_group, hour) %>%
summarize(n = n()) %>%
ggplot(aes(x=hour,y=n,color=incident_group)) +
geom_line(size=2) +
xlab("Hour") +
ylab("Count") +
ggtitle("Madison Crime Data")
it3 %>%
filter(incident_group == "other") %>%
count(IncidentType) %>%
arrange(desc(n))
it3 %>%
group_by(incident_group, hour) %>%
summarize(n = n()) %>%
filter(incident_group != "other") %>%
ggplot(aes(x=hour,y=n,color=incident_group)) +
geom_line(size=2) +
xlab("Hour") +
ylab("Count") +
ggtitle("Madison Crime Data")
## set.seed to be able to replicate the random sample
set.seed(1)
police_1 <- police_orig %>%
filter(!is.na(Arrested)) %>%
sample_n(size=100) %>%
select(IncidentID,Arrested) %>%
arrange(as.numeric(IncidentID))
print(police_1, n=100)
View(police)
extract_race <- function(x)
{
x_lower <- str_to_lower(x)
df <- tibble(x) %>%
mutate(race = case_when(
is.na(x) ~ as.character(NA),
str_detect(str_to_lower(x),"^n/a$") ~ as.character(NA),
str_detect(x_lower,"^unknown$") ~ as.character(NA),
str_detect(x_lower,"white,") ~ "white",
str_detect(x_lower,"[mf]/w") ~ "white",
str_detect(x_lower,"w/[mf]") ~ "white",
str_detect(x_lower,"black,") ~ "black",
str_detect(x_lower,"[mf]/b") ~ "black",
str_detect(x_lower,"b/[mf]") ~ "black",
str_detect(x_lower,"african") ~ "black",
str_detect(x_lower,"asian,") ~ "asian",
str_detect(x_lower,"hispanic,") ~ "hispanic",
str_detect(x_lower,"[mf]/h") ~ "hispanic",
str_detect(x_lower,"h/[mf]") ~ "hispanic",
str_detect(x_lower,"latin[oax]") ~ "latinx",
TRUE ~ "X"
))
return( pull(df,race) )
}
police_1_test <- police %>%
mutate(suspect_race = extract_race(Arrested))
View(police_1)
View(police_1_test)
check_id <- 8683 #8977 #8683 #8170
police_1_test %>%
filter(IncidentID == check_id) %>%
pull(Arrested)
police_1_test %>%
select(IncidentID, suspect_race) %>%
filter(IncidentID == check_id)
check_id <- 8977 #8683  #8683 #8170
police_1_test %>%
filter(IncidentID == check_id) %>%
pull(Arrested)
police_1_test %>%
select(IncidentID, suspect_race) %>%
filter(IncidentID == check_id)
check_id <- 8683 #8977 #8683   #8170
police_1_test %>%
filter(IncidentID == check_id) %>%
pull(Arrested)
police_1_test %>%
select(IncidentID, suspect_race) %>%
filter(IncidentID == check_id)
police_1_test %>%
select(suspect_race) %>%
table()
