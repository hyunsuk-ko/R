geom_col() +
facet_wrap(~hour) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
ggtitle("Proportion of people through customs in < 30 minutes depend on other factors?",
subtitle = "Factor: airport and hour")
# It looks like some of the airports do not have passengers in certain time windows
# Is that correct?
awt %>%
filter(airport=="MSP") %>%
group_by(hour) %>%
summarize(tot = sum(check_total))
## Let's try a scatterplot of the same information as the previous graphic
## -> which is easier to interpret?
## Fraction of passengers per airport and per hour that go through in < 30 minutes
awt %>%
group_by(airport,hour) %>%
summarize(total = sum(check_total),
n_less_30 = sum(all_n_0_15) + sum(all_n_16_30),
p_less_30 = n_less_30 / total,
booths = sum(all_booths)) %>%
ggplot(aes(x=hour, y=p_less_30,color=airport, shape=airport)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Proportion of people through customs in < 30 minutes depend on other factors?",
subtitle = "Factor: airport and hour")
# Look at passengers per booth vs. hour
# Color based on proportion who wait less than 30 minutes
# Consider size based on the number of booths open
awt %>%
group_by(airport,hour) %>%
summarize(total = sum(check_total),
n_less_30 = sum(all_n_0_15) + sum(all_n_16_30),
p_less_30 = n_less_30 / total,
booths = sum(all_booths)) %>%
mutate(passenger_per_booth = total/booths) %>%
ggplot(aes(hour,passenger_per_booth, color=p_less_30, size = booths)) +
geom_point() +
geom_hline(yintercept=45, color="red", linetype="dashed") +
facet_wrap(~airport) +
ylab("Number of passengers per available booth") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Proportion of people through customs in < 30 minutes depend on other factors?",
subtitle = "Factor: booth and hour")
# Look at proportion who wait less than 30 minutes vs. hour
# Color based on proportion number of passengers per booth
awt %>%
group_by(airport,hour) %>%
summarize(total = sum(check_total),
n_less_30 = sum(all_n_0_15) + sum(all_n_16_30),
p_less_30 = n_less_30 / total,
booths = sum(all_booths)) %>%
mutate(passenger_per_booth = total/booths) %>%
ggplot(aes(hour,p_less_30, color=passenger_per_booth)) +
geom_point() +
facet_wrap(~airport) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Proportion of people through customs in < 30 minutes depend on other factors?",
subtitle = "Factor: booth and hour")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, fig.height = 3)
library(tidyverse)
library(lubridate)
## Note: this code assumes viridis.R is two steps up the file directory tree
## Comment it out and use the line below if the file is in the same directory
## Or comment out both lines if you do not have the file
source("../../scripts/viridis.R")
## Read in the csv file
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag == 1) %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse)
planets
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit')
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
group_by(method)
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
group_by(method) %>%
summarize(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
group_by(method) %>%
distinct() %>%
summarize(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
group_by(method) %>%
distinct() #%>%
#summarize(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
group_by(method) %>%
summarize(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
group_by(method) %>%
drop_na() %>%
summarize(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
group_by(method) %>%
drop_na() %>%
distinct() %>%
summarize(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit')
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct()
planets
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct()
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method)
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
select(method, mass) %>%
distinct()
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
select(method, mass) %>%
distinct() %>%
group_by(method)
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
select(method, mass) %>%
distinct() %>%
group_by(method) %>%
drop_na()
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
select(method, mass) %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarize(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
select(method, mass) %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarize_all(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
select(method, mass) %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarize_all(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarize_all(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarise(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarise_each(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarise(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit')
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct()
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method)
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na()
planets %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
summarise(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
awt %>%
select(airport,date)
awt %>%
select(airport,date) %>%
distinct()
awt %>%
select(airport,date) %>%
distinct() %>%
group_by(airport)
planets
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
summarise(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarise(min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
select(method, mass)
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit')
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct()
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method)
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na()
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarise(n=n(),min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets
planet %>%
filter(planet == 'Earth')
planets %>%
filter(planet == 'Earth')
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na() %>%
summarise(n=n(),min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
select(method, mass)
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit')
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct()
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method)
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
group_by(method) %>%
drop_na()
planets %>%
select(method, mass) %>%
group_by(method) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
drop_na() %>%
summarise(n=n(),min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
select(method, mass) %>%
group_by(method
planets %>%
planets %>%
select(method, mass)
planets %>%
select(method, mass) %>%
group_by(method)
planets %>%
#select(method, mass) %>%
group_by(method)
planets1 <- planets %>%
#select(method, mass) %>%
group_by(method) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
drop_na() %>%
summarise(n=n(),min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets1
planets %>%
group_by(method)
planets %>%
select(planet, method, mass)
planets %>%
select(planet, method, mass)
group_by(method)
planets %>%
select(planet, method, mass)
group_by(method)
planets %>%
select(method, mass)
group_by(method)
## Read in the csv file
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag == 1) %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse)
planets %>%
select(method, mass)
group_by(method)
planets %>%
select(method, mass) %>%
group_by(method)
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit')
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
group_by(method)
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
drop_na() %>%
group_by(method)
awt %>%
select(airport,date,month)
awt %>%
select(airport,date,month) %>%
distinct() %>%
group_by(airport,month)
awt %>%
select(airport,date,month) %>%
distinct() %>%
group_by(airport,month) %>%
summarize(n = n())
planets %>%
select(method, mass)
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
drop_na() %>%
group_by(method) %>%
summarise(n=n(),min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
select(planet, method, mass)
planets
```{r question-1}
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit')
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
drop_na() %>%
group_by(method) %>%
summarise(n=n(),min = min(mass), percentile = quantile(.25), mean = mean(mass), median = median(mass), max = max(mass))
## Read in the csv file
## Select some variables that we will work with and rename them
## Remove very massive planet (only to improve plot visuals)
## Drop missing values; the remaining exoplanets will have estimates of both mass and radius
planets <- read_csv("../../data/exoplanets-3sept2020.csv") %>%
filter(default_flag == 1) %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(planet=pl_name, star=hostname, method=discoverymethod,year=disc_year, number=sy_pnum, radius=pl_rade, mass=pl_bmasse)
View(planets)
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
drop_na() %>%
group_by(method) %>%
summarise(n=n(),min = min(mass), percentile = quantile(.25, mass), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
drop_na() %>%
group_by(method) %>%
summarise(n=n(),min = min(mass), percentile = quantile(mass,.25), mean = mean(mass), median = median(mass), max = max(mass))
planets %>%
select(method, mass) %>%
filter(method == 'Radial Velocity' | method == 'Transit') %>%
distinct() %>%
drop_na() %>%
group_by(method) %>%
summarise(n=n(),min = min(mass), percentile = quantile(mass, .25), mean = mean(mass), median = median(mass), max = max(mass))
planets_radius <- planets %>%
select(planet, method, radius) %>%
drop_na() %>%
filter(radius <= 6371) %>%
summarize(n=n(), min=min(radius), max=max(mass))
planets_radius <- planets %>%
select(planet, method, radius) %>%
drop_na() %>%
filter(radius <= 6371) %>%
summarize(n=n(), min=min(radius), max=max(radius))
planets_radius
planets_radius <- planets %>%
select(planet, method, radius) %>%
drop_na() %>%
filter(radius <= 6.4) %>%
summarize(n=n(), min=min(radius), max=max(radius))
planets_radius
planets_mass <- planets %>%
select(planet, method, mass) %>%
filter(mass <= 5.972) %>%
summarize(n=n(), min=min(mass), max=max(mass))
planets_mass
planets_mass <- planets %>%
select(planet, mass) %>%
filter(mass <= 5.972) %>%
summarize(n=n(), min=min(mass), max=max(mass))
planets_radius <- planets %>%
select(planet, radius) %>%
drop_na() %>%
filter(radius <= 6.4) %>%
summarize(n=n(), min=min(radius), max=max(radius))
planets_mass_radius <- planets %>%
select(planet, hostname, method, mass, radius) %>%
filter(mass <= 5.972 & radius <= 6.4)
planets_mass_radius <- planets %>%
select(planet, star, method, mass, radius) %>%
filter(mass <= 5.972 & radius <= 6.4)
planets_mass_radius
planets_mass_radius %>%
pull(star)
planets_mass_radius %>%
pull(star) %>%
arrange(mass)
planets_mass_radius %>%
pull(star) %>%
slice_max(order_by=mass)
planets_mass_radius %>%
slice_max(order_by=mass)
planets_mass_radius %>%
mutate(n=n())
#slice_max(order_by=mass)
planets_mass_radius %>%
mutate(n=n()) %>%
slice_max(order_by=mass, n=n)
planets_mass_radius %>%
mutate(count=n()) %>%
slice_max(order_by=mass, n=count)
number <- planets_mass_radius %>% count(planets_mass_radius)
number <- count(planets_mass_radius)
number
number <- count(planets_mass_radius)
planets_mass_radius %>%
slice_max(order_by=mass, n=number)
number <- count(planets_mass_radius)
number
number <- count(planets_mass_radius)
planets_mass_radius %>%
slice_max(order_by=mass, n=84)
number <- count(planets_mass_radius)
planets_mass_radius %>%
slice_max(order_by=mass, n=84) %>%
pull(star)
planets_mass_radius %>%
slice_max(order_by=mass, n=3)
planets %>%
select(star, planet, method, year, mass)
planets %>%
select(star, planet, method, year, mass) %>%
slice_max(order_by=mass, n=3)
planets %>%
select(star, planet, method, year, mass) %>%
slice_max(order_by=mass, n=3) %>%
mutate(mass_j=mass/317.8)
planets %>%
filter(method !=`Astrometry` &  method !=`Disk Kinematics` & method !=`Eclipse Timing Variations` & method !=`Orbital Brightness Modulation` & method !=`Pulsar Timing` & method != 'Pulsar Timing Variations')
number <- count(planets_mass_radius %>% drop_na())
number
number <- count(planets_mass_radius %>% drop_na())
planets_mass_radius %>%
slice_max(order_by=mass, n=84) %>%
pull(star)
planets %>%
select(star, planet, method, year, mass) %>%
slice_max(order_by=mass, n=3) %>%
mutate(mass_j=mass/317.8)
